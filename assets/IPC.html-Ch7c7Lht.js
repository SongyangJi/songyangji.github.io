const e=JSON.parse('{"key":"v-1adedf5c","path":"/posts/IPC.html","title":"进程间通信IPC","lang":"zh-CN","frontmatter":{"title":"进程间通信IPC","date":"2021-11-27T17:40:03.000Z","categories":"操作系统","tags":["IPC","Linux"],"description":"介绍 进程间通信（IPC：interprocess communication）是一种涉及一个进程与另一个进程的通信的机制。 这通常只发生在一个系统中。 沟通可以有两种类型 - 在仅从一个进程启动的相关进程之间，例如父进程和子进程。 在不相关的进程之间，或两个或多个不同的进程之间。 具体来说，有下面三大类形式： 按照《UNIX网络编程 卷2：进程间通信》的目录分类： 消息传递（管道、FIFO、消息队列） 同步（互斥锁和条件变量、读写锁、信号量） 共享内存（匿名的、具名的）","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/IPC.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"进程间通信IPC"}],["meta",{"property":"og:description","content":"介绍 进程间通信（IPC：interprocess communication）是一种涉及一个进程与另一个进程的通信的机制。 这通常只发生在一个系统中。 沟通可以有两种类型 - 在仅从一个进程启动的相关进程之间，例如父进程和子进程。 在不相关的进程之间，或两个或多个不同的进程之间。 具体来说，有下面三大类形式： 按照《UNIX网络编程 卷2：进程间通信》的目录分类： 消息传递（管道、FIFO、消息队列） 同步（互斥锁和条件变量、读写锁、信号量） 共享内存（匿名的、具名的）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-20T05:11:46.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"IPC"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2021-11-27T17:40:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-20T05:11:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进程间通信IPC\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-27T17:40:03.000Z\\",\\"dateModified\\":\\"2024-01-20T05:11:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"管道","slug":"管道","link":"#管道","children":[{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":3,"title":"实例代码","slug":"实例代码","link":"#实例代码","children":[]}]},{"level":2,"title":"FIFO","slug":"fifo","link":"#fifo","children":[]},{"level":2,"title":"消息队列","slug":"消息队列","link":"#消息队列","children":[{"level":3,"title":"使用方法","slug":"使用方法-1","link":"#使用方法-1","children":[]}]},{"level":2,"title":"互斥锁与条件变量","slug":"互斥锁与条件变量","link":"#互斥锁与条件变量","children":[{"level":3,"title":"使用方法","slug":"使用方法-2","link":"#使用方法-2","children":[]}]},{"level":2,"title":"信号量","slug":"信号量","link":"#信号量","children":[{"level":3,"title":"使用方法","slug":"使用方法-3","link":"#使用方法-3","children":[]}]},{"level":2,"title":"内存映射","slug":"内存映射","link":"#内存映射","children":[{"level":3,"title":"使用方法","slug":"使用方法-4","link":"#使用方法-4","children":[]},{"level":3,"title":"实例代码","slug":"实例代码-1","link":"#实例代码-1","children":[]}]},{"level":2,"title":"共享内存","slug":"共享内存","link":"#共享内存","children":[{"level":3,"title":"Posix 版本","slug":"posix-版本","link":"#posix-版本","children":[]},{"level":3,"title":"SystemV 版本","slug":"systemv-版本","link":"#systemv-版本","children":[]}]}],"git":{"createdTime":1705581818000,"updatedTime":1705727506000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":3}]},"readingTime":{"minutes":9.81,"words":2944},"filePathRelative":"posts/IPC.md","localizedDate":"2021年11月28日","excerpt":"<h1> 介绍</h1>\\n<p>进程间通信（IPC：interprocess communication）是一种涉及一个进程与另一个进程的通信的机制。 这通常只发生在一个系统中。</p>\\n<p>沟通可以有两种类型 -</p>\\n<ul>\\n<li>在仅从一个进程启动的相关进程之间，例如父进程和子进程。</li>\\n<li>在不相关的进程之间，或两个或多个不同的进程之间。</li>\\n</ul>\\n<p>具体来说，有下面三大类形式：</p>\\n<figure><figcaption></figcaption></figure>\\n<p>按照《UNIX网络编程 卷2：进程间通信》的目录分类：</p>\\n<ol>\\n<li>消息传递（管道、FIFO、消息队列）</li>\\n<li>同步（互斥锁和条件变量、读写锁、信号量）</li>\\n<li>共享内存（匿名的、具名的）</li>\\n</ol>","autoDesc":true}');export{e as data};
