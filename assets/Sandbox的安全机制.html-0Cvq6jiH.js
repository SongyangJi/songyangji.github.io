const e=JSON.parse('{"key":"v-5b42a6b6","path":"/posts/Sandbox%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6.html","title":"Sandbox的安全机制如何设计？","lang":"zh-CN","frontmatter":{"description":"g--- title: Sandbox的安全机制 date: 2021-12-10 21:51:54 categories: sandbox tags: 安全 Linux sandbox star: true Sandbox的安全机制如何设计？ 对于Linux而言，它的风格是一贯的。沙盒是进程而不是线程，这点非常明确。 用户权限相关 Nobody 用户 在许多Unix系统与类Unix系统（如Linux）中，nobody是一个没有任何权限的用户。 该用户不拥有任何文件，也没有任何特殊权限。某些系统还会定义类似的用户组“nogroup”。 示例：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Sandbox%E7%9A%84%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"Sandbox的安全机制如何设计？"}],["meta",{"property":"og:description","content":"g--- title: Sandbox的安全机制 date: 2021-12-10 21:51:54 categories: sandbox tags: 安全 Linux sandbox star: true Sandbox的安全机制如何设计？ 对于Linux而言，它的风格是一贯的。沙盒是进程而不是线程，这点非常明确。 用户权限相关 Nobody 用户 在许多Unix系统与类Unix系统（如Linux）中，nobody是一个没有任何权限的用户。 该用户不拥有任何文件，也没有任何特殊权限。某些系统还会定义类似的用户组“nogroup”。 示例："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-22T10:12:10.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:modified_time","content":"2024-01-22T10:12:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sandbox的安全机制如何设计？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-22T10:12:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"用户权限相关","slug":"用户权限相关","link":"#用户权限相关","children":[{"level":3,"title":"Nobody 用户","slug":"nobody-用户","link":"#nobody-用户","children":[]},{"level":3,"title":"root 用户","slug":"root-用户","link":"#root-用户","children":[]}]},{"level":2,"title":"资源限制","slug":"资源限制","link":"#资源限制","children":[{"level":3,"title":"setuid/setgid","slug":"setuid-setgid","link":"#setuid-setgid","children":[]},{"level":3,"title":"setrlimit/getrlimit","slug":"setrlimit-getrlimit","link":"#setrlimit-getrlimit","children":[]}]},{"level":2,"title":"什么是seccomp","slug":"什么是seccomp","link":"#什么是seccomp","children":[]},{"level":2,"title":"如何使用seccomp","slug":"如何使用seccomp","link":"#如何使用seccomp","children":[]},{"level":2,"title":"如何查看是否使用了seccomp","slug":"如何查看是否使用了seccomp","link":"#如何查看是否使用了seccomp","children":[]},{"level":2,"title":"api rule","slug":"api-rule","link":"#api-rule","children":[{"level":3,"title":"SCMP_SYS","slug":"scmp-sys","link":"#scmp-sys","children":[]},{"level":3,"title":"scmp_filter_ctx","slug":"scmp-filter-ctx","link":"#scmp-filter-ctx","children":[]},{"level":3,"title":"seccomp_init","slug":"seccomp-init","link":"#seccomp-init","children":[]},{"level":3,"title":"seccomp_rule_addXXX","slug":"seccomp-rule-addxxx","link":"#seccomp-rule-addxxx","children":[]},{"level":3,"title":"seccomp_load","slug":"seccomp-load","link":"#seccomp-load","children":[]},{"level":3,"title":"seccomp_release(3)","slug":"seccomp-release-3","link":"#seccomp-release-3","children":[]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}]}],"git":{"createdTime":1705581818000,"updatedTime":1705918330000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":2}]},"readingTime":{"minutes":12.49,"words":3746},"filePathRelative":"posts/Sandbox的安全机制.md","localizedDate":"2024年1月18日","excerpt":"<p>g---\\ntitle: Sandbox的安全机制\\ndate: 2021-12-10 21:51:54\\ncategories:</p>\\n<ul>\\n<li>sandbox\\ntags:</li>\\n<li>安全</li>\\n<li>Linux</li>\\n<li>sandbox\\nstar: true</li>\\n</ul>\\n<hr>\\n<h1> Sandbox的安全机制如何设计？</h1>\\n<p>对于Linux而言，它的风格是一贯的。沙盒是进程而不是线程，这点非常明确。</p>\\n<h2> 用户权限相关</h2>\\n<h3> Nobody 用户</h3>\\n<p>在许多Unix系统与类Unix系统（如Linux）中，nobody是一个没有任何权限的用户。\\n该用户不拥有任何文件，也没有任何特殊权限。某些系统还会定义类似的用户组“nogroup”。\\n示例：</p>","autoDesc":true}');export{e as data};
