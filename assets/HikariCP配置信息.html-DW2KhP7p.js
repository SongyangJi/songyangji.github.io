import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as l,c as i,b as t,d as o,e as a,a as n}from"./app-CN-Tp3xY.js";const s={},c=n("<table><thead><tr><th><strong>name</strong></th><th><strong>描述</strong></th><th><strong>构造器默认值</strong></th><th><strong>默认配置validate之后的值</strong></th><th><strong>validate重置</strong></th></tr></thead><tbody><tr><td>autoCommit</td><td>自动提交从池中返回的连接</td><td>TRUE</td><td>TRUE</td><td>–</td></tr><tr><td>connectionTimeout</td><td>等待来自池的连接的最大毫秒数</td><td>SECONDS.toMillis(30) = 30000</td><td>30000</td><td>如果小于250毫秒，则被重置回30秒</td></tr><tr><td>idleTimeout</td><td>连接允许在池中闲置的最长时间</td><td>MINUTES.toMillis(10) = 600000</td><td>600000</td><td>如果idleTimeout+1秒&gt;maxLifetime 且 maxLifetime&gt;0，则会被重置为0（代表永远不会退出）；如果idleTimeout!=0且小于10秒，则会被重置为10秒</td></tr><tr><td>maxLifetime</td><td>池中连接最长生命周期</td><td>MINUTES.toMillis(30) = 1800000</td><td>1800000</td><td>如果不等于0且小于30秒则会被重置回30分钟</td></tr><tr><td>connectionTestQuery</td><td>如果您的驱动程序支持JDBC4，我们强烈建议您不要设置此属性</td><td>null</td><td>null</td><td>–</td></tr><tr><td>minimumIdle</td><td>池中维护的最小空闲连接数</td><td>-1</td><td>10</td><td>minIdle&lt;0或者minIdle&gt;maxPoolSize,则被重置为maxPoolSize</td></tr><tr><td>maximumPoolSize</td><td>池中最大连接数，包括闲置和使用中的连接</td><td>-1</td><td>10</td><td>如果maxPoolSize小于1，则会被重置。当minIdle&lt;=0被重置为DEFAULT_POOL_SIZE则为10;如果minIdle&gt;0则重置为minIdle的值</td></tr><tr><td>metricRegistry</td><td>该属性允许您指定一个 Codahale / Dropwizard MetricRegistry 的实例，供池使用以记录各种指标</td><td>null</td><td>null</td><td>–</td></tr><tr><td>healthCheckRegistry</td><td>该属性允许您指定池使用的Codahale / Dropwizard HealthCheckRegistry的实例来报告当前健康信息</td><td>null</td><td>null</td><td>–</td></tr><tr><td>poolName</td><td>连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置</td><td>null</td><td>HikariPool-1</td><td>–</td></tr><tr><td>initializationFailTimeout</td><td>如果池无法成功初始化连接，则此属性控制池是否将 fail fast</td><td>1</td><td>1</td><td>–</td></tr><tr><td>isolateInternalQueries</td><td>是否在其自己的事务中隔离内部池查询，例如连接活动测试</td><td>FALSE</td><td>FALSE</td><td>–</td></tr><tr><td>allowPoolSuspension</td><td>控制池是否可以通过JMX暂停和恢复</td><td>FALSE</td><td>FALSE</td><td>–</td></tr><tr><td>readOnly</td><td>从池中获取的连接是否默认处于只读模式</td><td>FALSE</td><td>FALSE</td><td>–</td></tr><tr><td>registerMbeans</td><td>是否注册JMX管理Bean（MBeans）</td><td>FALSE</td><td>FALSE</td><td>–</td></tr><tr><td>catalog</td><td>为支持 catalog 概念的数据库设置默认 catalog</td><td>driver default</td><td>null</td><td>–</td></tr><tr><td>connectionInitSql</td><td>该属性设置一个SQL语句，在将每个新连接创建后，将其添加到池中之前执行该语句。</td><td>null</td><td>null</td><td>–</td></tr><tr><td>driverClassName</td><td>HikariCP将尝试通过仅基于jdbcUrl的DriverManager解析驱动程序，但对于一些较旧的驱动程序，还必须指定driverClassName</td><td>null</td><td>null</td><td>–</td></tr><tr><td>transactionIsolation</td><td>控制从池返回的连接的默认事务隔离级别</td><td>null</td><td>null</td><td>–</td></tr><tr><td>validationTimeout</td><td>连接将被测试活动的最大时间量</td><td>SECONDS.toMillis(5) = 5000</td><td>5000</td><td>如果小于250毫秒，则会被重置回5秒</td></tr><tr><td>leakDetectionThreshold</td><td>记录消息之前连接可能离开池的时间量，表示可能的连接泄漏</td><td>0</td><td>0</td><td>如果大于0且不是单元测试，则进一步判断：(leakDetectionThreshold &lt; SECONDS.toMillis(2) or (leakDetectionThreshold &gt; maxLifetime &amp;&amp; maxLifetime &gt; 0)，会被重置为0 . 即如果要生效则必须&gt;0，而且不能小于2秒，而且当maxLifetime &gt; 0时不能大于maxLifetime</td></tr><tr><td>dataSource</td><td>这个属性允许你直接设置数据源的实例被池包装，而不是让HikariCP通过反射来构造它</td><td>null</td><td>null</td><td>–</td></tr><tr><td>schema</td><td>该属性为支持模式概念的数据库设置默认模式</td><td>driver default</td><td>null</td><td>–</td></tr><tr><td>threadFactory</td><td>此属性允许您设置将用于创建池使用的所有线程的java.util.concurrent.ThreadFactory的实例。</td><td>null</td><td>null</td><td>–</td></tr><tr><td>scheduledExecutor</td><td>此属性允许您设置将用于各种内部计划任务的java.util.concurrent.ScheduledExecutorService实例</td><td>null</td><td>null</td><td>–</td></tr></tbody></table>",1),m={href:"https://github.com/brettwooldridge/HikariCP",target:"_blank",rel:"noopener noreferrer"};function u(h,g){const d=r("ExternalLinkIcon");return l(),i("div",null,[c,t("blockquote",null,[t("p",null,[t("a",m,[o("HikariCP on github"),a(d)])])])])}const E=e(s,[["render",u],["__file","HikariCP配置信息.html.vue"]]);export{E as default};
