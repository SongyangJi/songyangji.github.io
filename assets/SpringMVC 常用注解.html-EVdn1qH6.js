const e=JSON.parse('{"key":"v-59c30e12","path":"/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringMVC%20%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html","title":"SpringMVC 常用注解","lang":"zh-CN","frontmatter":{"title":"SpringMVC 常用注解","date":"2021-04-02T00:00:00.000Z","categories":["Spring"],"tags":["Spring","SpringMVC"],"description":"@Controller @Controller 用于标记在一个类上，使用它标记的类就是一个SpringMVC Controller 对象。分发处理器将会扫描使用了该注解的类的方法，并检测该方法是否使用了@RequestMapping 注解。 @Controller 只是定义了一个控制器类，而使用@RequestMapping 注解的方法才是真正处理请求的处理器。 @RestController 一般我们直接把这个注解加上控制类上，既声明这是一个控制类，也将对象转成json格式传给前端。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringMVC%20%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"SpringMVC 常用注解"}],["meta",{"property":"og:description","content":"@Controller @Controller 用于标记在一个类上，使用它标记的类就是一个SpringMVC Controller 对象。分发处理器将会扫描使用了该注解的类的方法，并检测该方法是否使用了@RequestMapping 注解。 @Controller 只是定义了一个控制器类，而使用@RequestMapping 注解的方法才是真正处理请求的处理器。 @RestController 一般我们直接把这个注解加上控制类上，既声明这是一个控制类，也将对象转成json格式传给前端。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2021-04-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringMVC 常用注解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"@RestController","slug":"restcontroller","link":"#restcontroller","children":[]},{"level":2,"title":"URL匹配","slug":"url匹配","link":"#url匹配","children":[]},{"level":2,"title":"value和method属性","slug":"value和method属性","link":"#value和method属性","children":[]},{"level":2,"title":"@GetMapping、@PostMapping","slug":"getmapping、-postmapping","link":"#getmapping、-postmapping","children":[]},{"level":2,"title":"@PathVariable","slug":"pathvariable","link":"#pathvariable","children":[]},{"level":2,"title":"@RequestBody","slug":"requestbody","link":"#requestbody","children":[]},{"level":2,"title":"@RequestParam","slug":"requestparam","link":"#requestparam","children":[]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":2.63,"words":788},"filePathRelative":"posts/Spring学习笔记/SpringMVC 常用注解.md","localizedDate":"2021年4月2日","excerpt":"<h1> @Controller</h1>\\n<p><code>@Controller</code> 用于标记在一个类上，使用它标记的类就是一个SpringMVC Controller\\n对象。分发处理器将会扫描使用了该注解的类的方法，并检测该方法是否使用了@RequestMapping 注解。\\n<strong>@Controller 只是定义了一个控制器类，而使用@RequestMapping 注解的方法才是真正处理请求的处理器。</strong></p>\\n<h2> @RestController</h2>\\n<p>一般我们直接把这个注解加上控制类上，既声明这是一个控制类，也将对象转成json格式传给前端。</p>","autoDesc":true}');export{e as data};
