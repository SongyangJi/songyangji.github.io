const t=JSON.parse(`{"key":"v-396b681f","path":"/posts/Docker/Docker%E5%AE%B9%E5%99%A8%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5.html","title":"Docker容器健康检查","lang":"zh-CN","frontmatter":{"title":"Docker容器健康检查","date":"2022-05-16T10:11:25.000Z","categories":["Docker"],"tags":["Docker"],"description":"结构体定义 // Health states const ( NoHealthcheck = \\"none\\" // Indicates there is no healthcheck Starting = \\"starting\\" // Starting indicates that the container is not yet ready Healthy = \\"healthy\\" // Healthy indicates that the container is running correctly Unhealthy = \\"unhealthy\\" // Unhealthy indicates that the container has a problem ) // Health stores information about the container's healthcheck results type Health struct { Status string // Status is one of Starting, Healthy or Unhealthy FailingStreak int // FailingStreak is the number of consecutive failures Log []*HealthcheckResult // Log contains the last few results (oldest first) } // ContainerState stores container's running state // it's part of ContainerJSONBase and will return by \\"inspect\\" command type ContainerState struct { Status string // String representation of the container state. Can be one of \\"created\\", \\"running\\", \\"paused\\", \\"restarting\\", \\"removing\\", \\"exited\\", or \\"dead\\" Running bool Paused bool Restarting bool OOMKilled bool Dead bool Pid int ExitCode int Error string StartedAt string FinishedAt string Health *Health \`json:\\",omitempty\\"\` }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Docker/Docker%E5%AE%B9%E5%99%A8%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"Docker容器健康检查"}],["meta",{"property":"og:description","content":"结构体定义 // Health states const ( NoHealthcheck = \\"none\\" // Indicates there is no healthcheck Starting = \\"starting\\" // Starting indicates that the container is not yet ready Healthy = \\"healthy\\" // Healthy indicates that the container is running correctly Unhealthy = \\"unhealthy\\" // Unhealthy indicates that the container has a problem ) // Health stores information about the container's healthcheck results type Health struct { Status string // Status is one of Starting, Healthy or Unhealthy FailingStreak int // FailingStreak is the number of consecutive failures Log []*HealthcheckResult // Log contains the last few results (oldest first) } // ContainerState stores container's running state // it's part of ContainerJSONBase and will return by \\"inspect\\" command type ContainerState struct { Status string // String representation of the container state. Can be one of \\"created\\", \\"running\\", \\"paused\\", \\"restarting\\", \\"removing\\", \\"exited\\", or \\"dead\\" Running bool Paused bool Restarting bool OOMKilled bool Dead bool Pid int ExitCode int Error string StartedAt string FinishedAt string Health *Health \`json:\\",omitempty\\"\` }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2022-05-16T10:11:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker容器健康检查\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-16T10:11:25.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"结构体定义","slug":"结构体定义","link":"#结构体定义","children":[]},{"level":3,"title":"容器状态举例","slug":"容器状态举例","link":"#容器状态举例","children":[]},{"level":2,"title":"实操","slug":"实操","link":"#实操","children":[{"level":3,"title":"一个简单的健康检测","slug":"一个简单的健康检测","link":"#一个简单的健康检测","children":[]}]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":2.16,"words":649},"filePathRelative":"posts/Docker/Docker容器健康检查.md","localizedDate":"2022年5月16日","excerpt":"<h3> 结构体定义</h3>\\n<div class=\\"language-json line-numbers-mode\\" data-ext=\\"json\\"><pre class=\\"language-json\\"><code><span class=\\"token comment\\">// Health states</span>\\nconst (\\n   NoHealthcheck = <span class=\\"token string\\">\\"none\\"</span>      <span class=\\"token comment\\">// Indicates there is no healthcheck</span>\\n   Starting      = <span class=\\"token string\\">\\"starting\\"</span>  <span class=\\"token comment\\">// Starting indicates that the container is not yet ready</span>\\n   Healthy       = <span class=\\"token string\\">\\"healthy\\"</span>   <span class=\\"token comment\\">// Healthy indicates that the container is running correctly</span>\\n   Unhealthy     = <span class=\\"token string\\">\\"unhealthy\\"</span> <span class=\\"token comment\\">// Unhealthy indicates that the container has a problem</span>\\n)\\n\\n<span class=\\"token comment\\">// Health stores information about the container's healthcheck results</span>\\ntype Health struct <span class=\\"token punctuation\\">{</span>\\n   Status        string               <span class=\\"token comment\\">// Status is one of Starting, Healthy or Unhealthy</span>\\n   FailingStreak int                  <span class=\\"token comment\\">// FailingStreak is the number of consecutive failures</span>\\n   Log           <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>*HealthcheckResult <span class=\\"token comment\\">// Log contains the last few results (oldest first)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// ContainerState stores container's running state</span>\\n<span class=\\"token comment\\">// it's part of ContainerJSONBase and will return by \\"inspect\\" command</span>\\ntype ContainerState struct <span class=\\"token punctuation\\">{</span>\\n   Status     string <span class=\\"token comment\\">// String representation of the container state. Can be one of \\"created\\", \\"running\\", \\"paused\\", \\"restarting\\", \\"removing\\", \\"exited\\", or \\"dead\\"</span>\\n   Running    bool\\n   Paused     bool\\n   Restarting bool\\n   OOMKilled  bool\\n   Dead       bool\\n   Pid        int\\n   ExitCode   int\\n   Error      string\\n   StartedAt  string\\n   FinishedAt string\\n   Health     *Health \`json<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\",omitempty\\"</span>\`\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as data};
