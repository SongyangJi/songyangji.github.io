import{_ as P}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,b as l}from"./app-CN-Tp3xY.js";const o={},t=l("ol",null,[l("li",null,"连接 TCP 是⾯向连接的传输层协议，传输数据前先要建⽴连接。 UDP 是不需要连接，即刻传输数据。"),l("li",null,"服务对象 TCP 是⼀对⼀的两点服务，即⼀条连接只有两个端点。 UDP ⽀持⼀对⼀、⼀对多、多对多的交互通信。"),l("li",null,"可靠性 TCP 是可靠交付数据的，数据可以⽆差错、不丢失、不重复、按序到达。 UDP 是尽最⼤努⼒交付，不保证可靠交付数据。"),l("li",null,"拥塞控制、流量控制 TCP 有拥塞控制和流量控制机制，保证数据传输的安全性。UDP 则没有，即使⽹络⾮常拥堵了，也不会影响 UDP 的发送速率。"),l("li",null,"⾸部开销 TCP ⾸部⻓度较⻓，会有⼀定的开销，⾸部在没有使⽤「选项」字段时是 20 个字节，如果使⽤了「选项」字段则会变⻓的；UDP ⾸部只有 8 个字节，并且是固定不变的，开销较⼩。"),l("li",null,"传输⽅式 TCP 是流式传输，没有边界，但保证顺序和可靠。 UDP 是⼀个包⼀个包的发送，是有边界的，但可能会丢包和乱序。"),l("li",null,"分⽚不同 TCP 的数据⼤⼩如果⼤于 MSS ⼤⼩，则会在传输层进⾏分⽚，⽬标主机收到后，也同样在传输层组装 TCP数据包，如果中途丢失了⼀个分⽚，只需要传输丢失的这个分⽚。 UDP 的数据⼤⼩如果⼤于 MTU ⼤⼩，则会在 IP 层进⾏分⽚，⽬标主机收到后，在 IP 层组装完数据，接着再传给传输层，但是如果中途丢了⼀个分⽚，在实现可靠传输的 UDP 时则就需要重传所有的数据包，这样传输效率⾮常差，所以通常 UDP 的报⽂应该⼩于 MTU。"),l("li",null,"适用场景 当对网络通讯质量有要求的时候，比如：整个数据要准确无误的传递给对方，这往往用于一些要求可靠的应用，比如HTTP、HTTPS、FTP等传输文件的协议，POP、SMTP等邮件传输的协议。当对网络通讯质量要求不高的时候，要求网络通讯速度能尽量的快，这时就可以使用UDP（如视频传输、实时通信等）。")],-1),_=[t];function T(c,i){return e(),n("div",null,_)}const r=P(o,[["render",T],["__file","TCP、UDP区别.html.vue"]]);export{r as default};
