const e=JSON.parse('{"key":"v-7131d644","path":"/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html","title":"分布式事务","lang":"zh-CN","frontmatter":{"title":"分布式事务","date":"2022-03-16T16:29:42.000Z","categories":["分布式"],"tags":["分布式","事务"],"description":"CAP CAP定理：一个分布式系统不可能满足一致性，可用性和分区容错性这三个需求，最多只能同时满足两个。 文档系列C: Consistency 一致性 一致性：在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值。相当于要求分布式系统中的各节点时时刻刻保持数据的一致性。 A: Availability 可用性 可用性： 一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应。用户角度来看就是不会出现系统操作失败或者访问超时等问题。 P: Tolerance of network Partition 分区容忍性 分区容错性：指的分布式系统中的某个节点或者网络分区出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务，也就是说部分故障不影响整体使用。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E9%82%A3%E4%BA%9B%E4%BA%8B/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"分布式事务"}],["meta",{"property":"og:description","content":"CAP CAP定理：一个分布式系统不可能满足一致性，可用性和分区容错性这三个需求，最多只能同时满足两个。 文档系列C: Consistency 一致性 一致性：在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值。相当于要求分布式系统中的各节点时时刻刻保持数据的一致性。 A: Availability 可用性 可用性： 一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应。用户角度来看就是不会出现系统操作失败或者访问超时等问题。 P: Tolerance of network Partition 分区容忍性 分区容错性：指的分布式系统中的某个节点或者网络分区出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务，也就是说部分故障不影响整体使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"事务"}],["meta",{"property":"article:published_time","content":"2022-03-16T16:29:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式事务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-16T16:29:42.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"CP的实现","slug":"cp的实现","link":"#cp的实现","children":[]},{"level":2,"title":"AP的实现","slug":"ap的实现","link":"#ap的实现","children":[]},{"level":2,"title":"Basically Availble（基本可用）","slug":"basically-availble-基本可用","link":"#basically-availble-基本可用","children":[]},{"level":2,"title":"Soft-state（软状态/柔性事务）","slug":"soft-state-软状态-柔性事务","link":"#soft-state-软状态-柔性事务","children":[]},{"level":2,"title":"Eventual Consistency（最终一致性）","slug":"eventual-consistency-最终一致性","link":"#eventual-consistency-最终一致性","children":[]},{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"算法流程","slug":"算法流程","link":"#算法流程","children":[]},{"level":2,"title":"缺点","slug":"缺点","link":"#缺点","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"前提","slug":"前提","link":"#前提","children":[]},{"level":2,"title":"工作机制","slug":"工作机制","link":"#工作机制","children":[{"level":3,"title":"Try 阶段","slug":"try-阶段","link":"#try-阶段","children":[]},{"level":3,"title":"Confirm 阶段","slug":"confirm-阶段","link":"#confirm-阶段","children":[]},{"level":3,"title":"Cancel 阶段","slug":"cancel-阶段","link":"#cancel-阶段","children":[]}]},{"level":2,"title":"实现注意事项","slug":"实现注意事项","link":"#实现注意事项","children":[{"level":3,"title":"1、业务操作分两阶段完成","slug":"_1、业务操作分两阶段完成","link":"#_1、业务操作分两阶段完成","children":[]},{"level":3,"title":"2、允许空回滚","slug":"_2、允许空回滚","link":"#_2、允许空回滚","children":[]},{"level":3,"title":"3、防悬挂控制","slug":"_3、防悬挂控制","link":"#_3、防悬挂控制","children":[]},{"level":3,"title":"4、幂等控制","slug":"_4、幂等控制","link":"#_4、幂等控制","children":[]},{"level":3,"title":"5、业务数据可见性控制；","slug":"_5、业务数据可见性控制","link":"#_5、业务数据可见性控制","children":[]},{"level":3,"title":"6、业务数据并发访问控制；","slug":"_6、业务数据并发访问控制","link":"#_6、业务数据并发访问控制","children":[]}]},{"level":2,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]},{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[{"level":3,"title":"缺点","slug":"缺点-1","link":"#缺点-1","children":[]}]},{"level":2,"title":"前提","slug":"前提-1","link":"#前提-1","children":[]},{"level":2,"title":"整体机制","slug":"整体机制","link":"#整体机制","children":[]},{"level":2,"title":"隔离性","slug":"隔离性","link":"#隔离性","children":[{"level":3,"title":"写隔离","slug":"写隔离","link":"#写隔离","children":[]},{"level":3,"title":"读隔离","slug":"读隔离","link":"#读隔离","children":[]}]},{"level":2,"title":"工作机制","slug":"工作机制-1","link":"#工作机制-1","children":[{"level":3,"title":"一阶段","slug":"一阶段","link":"#一阶段","children":[]},{"level":3,"title":"二阶段","slug":"二阶段","link":"#二阶段","children":[]}]},{"level":2,"title":"最大努力通知","slug":"最大努力通知","link":"#最大努力通知","children":[]},{"level":2,"title":"本地消息表","slug":"本地消息表","link":"#本地消息表","children":[]},{"level":2,"title":"可靠消息最终一致性","slug":"可靠消息最终一致性","link":"#可靠消息最终一致性","children":[]},{"level":2,"title":"DB与MQ的一致性如何保证？","slug":"db与mq的一致性如何保证","link":"#db与mq的一致性如何保证","children":[{"level":3,"title":"本地消息表+生产者回调确认","slug":"本地消息表-生产者回调确认","link":"#本地消息表-生产者回调确认","children":[]},{"level":3,"title":"RocketMQ的half-message","slug":"rocketmq的half-message","link":"#rocketmq的half-message","children":[]}]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":24.15,"words":7245},"filePathRelative":"posts/分布式那些事/分布式事务.md","localizedDate":"2022年3月17日","excerpt":"<h1> CAP</h1>\\n<p>CAP定理：一个分布式系统不可能满足<strong>一致性</strong>，<strong>可用性</strong>和<strong>分区容错性</strong>这三个需求，最多只能同时满足两个。</p>\\n<ul>\\n<li>\\n<p>文档系列C: Consistency 一致性</p>\\n<p>一致性：在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值。相当于要求分布式系统中的各节点时时刻刻保持数据的一致性。</p>\\n</li>\\n<li>\\n<p>A: Availability 可用性</p>\\n<p>可用性： 一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应。用户角度来看就是不会出现系统操作失败或者访问超时等问题。</p>\\n</li>\\n<li>\\n<p>P: Tolerance of network Partition 分区容忍性</p>\\n<p>分区容错性：指的分布式系统中的某个节点或者网络分区出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务，也就是说部分故障不影响整体使用。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
