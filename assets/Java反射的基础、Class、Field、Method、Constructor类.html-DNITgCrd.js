const t=JSON.parse('{"key":"v-329237f2","path":"/posts/Java%E9%AB%98%E7%BA%A7/Java%E5%8F%8D%E5%B0%84%E7%9A%84%E5%9F%BA%E7%A1%80%E3%80%81Class%E3%80%81Field%E3%80%81Method%E3%80%81Constructor%E7%B1%BB.html","title":"反射的基础、Class、Field、Method、Constructor类","lang":"zh-CN","frontmatter":{"title":"反射的基础、Class、Field、Method、Constructor类","date":"2021-09-25T00:00:00.000Z","categories":["Java"],"tags":["Java语言基础"],"description":"简单的介绍一下反射的概念。为框架的学习打下基础。 反射概念 反射可以在运行时动态分析类，解析一个类的构造器、字段、方法、接口等等。 反射有何作用，或者说为什么要学习反射？ 作为应用程序员，一般情况下，并不直接使用反射，它更多在构建系统级程序时发挥用处，如实现Java的Spring框架、持久层框架Mybatis时，反射的使用处处可见。Java的其他特性或技术也依赖于反射，如代理（Proxy）等等。 所以，学习反射，很大程度上并不是让我们直接使用反射，而是更好地理解框架的实现，更好地操纵框架。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Java%E9%AB%98%E7%BA%A7/Java%E5%8F%8D%E5%B0%84%E7%9A%84%E5%9F%BA%E7%A1%80%E3%80%81Class%E3%80%81Field%E3%80%81Method%E3%80%81Constructor%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"反射的基础、Class、Field、Method、Constructor类"}],["meta",{"property":"og:description","content":"简单的介绍一下反射的概念。为框架的学习打下基础。 反射概念 反射可以在运行时动态分析类，解析一个类的构造器、字段、方法、接口等等。 反射有何作用，或者说为什么要学习反射？ 作为应用程序员，一般情况下，并不直接使用反射，它更多在构建系统级程序时发挥用处，如实现Java的Spring框架、持久层框架Mybatis时，反射的使用处处可见。Java的其他特性或技术也依赖于反射，如代理（Proxy）等等。 所以，学习反射，很大程度上并不是让我们直接使用反射，而是更好地理解框架的实现，更好地操纵框架。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"Java语言基础"}],["meta",{"property":"article:published_time","content":"2021-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反射的基础、Class、Field、Method、Constructor类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Field 类","slug":"field-类","link":"#field-类","children":[]},{"level":2,"title":"Method 类","slug":"method-类","link":"#method-类","children":[]},{"level":2,"title":"Constructor 类","slug":"constructor-类","link":"#constructor-类","children":[]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":6.96,"words":2087},"filePathRelative":"posts/Java高级/Java反射的基础、Class、Field、Method、Constructor类.md","localizedDate":"2021年9月25日","excerpt":"<blockquote>\\n<p>简单的介绍一下反射的概念。为框架的学习打下基础。</p>\\n</blockquote>\\n<h1> 反射概念</h1>\\n<p>反射可以在运行时动态分析类，解析一个类的构造器、字段、方法、接口等等。\\n反射有何作用，或者说为什么要学习反射？\\n作为应用程序员，一般情况下，并不直接使用反射，它更多在构建系统级程序时发挥用处，如实现Java的Spring框架、持久层框架Mybatis时，反射的使用处处可见。Java的其他特性或技术也依赖于反射，如代理（Proxy）等等。</p>\\n<p>所以，学习反射，很大程度上并不是让我们直接使用反射，而是更好地理解框架的实现，更好地操纵框架。</p>","autoDesc":true}');export{t as data};
