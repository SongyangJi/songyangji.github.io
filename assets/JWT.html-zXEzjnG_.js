const e=JSON.parse('{"key":"v-2c8082f2","path":"/posts/JWT.html","title":"JWT","lang":"zh-CN","frontmatter":{"title":"JWT","date":"2021-12-27T14:35:45.000Z","tags":null,"description":"在一个web项目中总需要考虑的一个问题就是如何认证用户的身份。 用户的认证方式 传统的session认证 互联网服务离不开用户认证。一般流程是下面这样。 1、用户向服务器发送用户名和密码。 2、服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。 3、服务器向用户返回一个 session_id，写入用户的 Cookie。 4、用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。 5、服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/JWT.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"JWT"}],["meta",{"property":"og:description","content":"在一个web项目中总需要考虑的一个问题就是如何认证用户的身份。 用户的认证方式 传统的session认证 互联网服务离不开用户认证。一般流程是下面这样。 1、用户向服务器发送用户名和密码。 2、服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。 3、服务器向用户返回一个 session_id，写入用户的 Cookie。 4、用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。 5、服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-20T05:31:59.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:published_time","content":"2021-12-27T14:35:45.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-20T05:31:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-27T14:35:45.000Z\\",\\"dateModified\\":\\"2024-01-20T05:31:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"传统的session认证","slug":"传统的session认证","link":"#传统的session认证","children":[{"level":3,"title":"基于session认证所显露的问题","slug":"基于session认证所显露的问题","link":"#基于session认证所显露的问题","children":[]}]},{"level":2,"title":"基于token的鉴权机制","slug":"基于token的鉴权机制","link":"#基于token的鉴权机制","children":[]},{"level":2,"title":"什么是JWT及原理","slug":"什么是jwt及原理","link":"#什么是jwt及原理","children":[]},{"level":2,"title":"JWT的构成","slug":"jwt的构成","link":"#jwt的构成","children":[{"level":3,"title":"Header","slug":"header","link":"#header","children":[]},{"level":3,"title":"Payload","slug":"payload","link":"#payload","children":[]},{"level":3,"title":"Signature","slug":"signature","link":"#signature","children":[]}]},{"level":2,"title":"JWT的几个特点","slug":"jwt的几个特点","link":"#jwt的几个特点","children":[]},{"level":2,"title":"基于jjwt使用JWT","slug":"基于jjwt使用jwt","link":"#基于jjwt使用jwt","children":[]},{"level":2,"title":"前端","slug":"前端","link":"#前端","children":[{"level":3,"title":"前端储存JWT","slug":"前端储存jwt","link":"#前端储存jwt","children":[]},{"level":3,"title":"请求携带JWT","slug":"请求携带jwt","link":"#请求携带jwt","children":[]},{"level":3,"title":"前端提取JWT携带的信息","slug":"前端提取jwt携带的信息","link":"#前端提取jwt携带的信息","children":[]}]},{"level":2,"title":"后端（SpringBoot）","slug":"后端-springboot","link":"#后端-springboot","children":[{"level":3,"title":"生成、解析JWT","slug":"生成、解析jwt","link":"#生成、解析jwt","children":[]},{"level":3,"title":"拦截器处理token的验证","slug":"拦截器处理token的验证","link":"#拦截器处理token的验证","children":[]}]}],"git":{"createdTime":1705581818000,"updatedTime":1705728719000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":4}]},"readingTime":{"minutes":12.16,"words":3647},"filePathRelative":"posts/JWT.md","localizedDate":"2021年12月27日","excerpt":"<blockquote>\\n<p>在一个web项目中总需要考虑的一个问题就是如何认证用户的身份。</p>\\n</blockquote>\\n<h1> 用户的认证方式</h1>\\n<h2> 传统的session认证</h2>\\n<p>互联网服务离不开用户认证。一般流程是下面这样。</p>\\n<blockquote>\\n<p>1、用户向服务器发送用户名和密码。</p>\\n<p>2、服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</p>\\n<p>3、服务器向用户返回一个 session_id，写入用户的 Cookie。</p>\\n<p>4、用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</p>\\n<p>5、服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
