const n=JSON.parse('{"key":"v-48b1db51","path":"/posts/MyBatis/MyBatis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%20%E2%80%94%E2%80%94%20mapping-%E5%8C%85%E7%9B%B8%E5%85%B3.html","title":"MyBatis源码剖析 —— mapping 包相关","lang":"zh-CN","frontmatter":{"title":"MyBatis源码剖析 —— mapping 包相关","date":"2021-08-08T00:00:00.000Z","categories":["MyBatis"],"tags":["MyBatis","框架源码系列"],"description":"package org.apache.ibatis.mapping; public final class MappedStatement { private String resource; private Configuration configuration; private String id; private Integer fetchSize; private Integer timeout; private StatementType statementType; private ResultSetType resultSetType; private SqlSource sqlSource; private Cache cache; private ParameterMap parameterMap; private List&lt;ResultMap&gt; resultMaps; private boolean flushCacheRequired; private boolean useCache; private boolean resultOrdered; private SqlCommandType sqlCommandType; private KeyGenerator keyGenerator; private String[] keyProperties; private String[] keyColumns; private boolean hasNestedResultMaps; private String databaseId; private Log statementLog; private LanguageDriver lang; private String[] resultSets; MappedStatement() { // constructor disabled } public static class Builder { private MappedStatement mappedStatement = new MappedStatement(); public Builder(Configuration configuration, String id, SqlSource sqlSource, SqlCommandType sqlCommandType) { mappedStatement.configuration = configuration; mappedStatement.id = id; mappedStatement.sqlSource = sqlSource; mappedStatement.statementType = StatementType.PREPARED; mappedStatement.resultSetType = ResultSetType.DEFAULT; mappedStatement.parameterMap = new ParameterMap.Builder(configuration, \\"defaultParameterMap\\", null, new ArrayList&lt;&gt;()).build(); mappedStatement.resultMaps = new ArrayList&lt;&gt;(); mappedStatement.sqlCommandType = sqlCommandType; mappedStatement.keyGenerator = configuration.isUseGeneratedKeys() &amp;&amp; SqlCommandType.INSERT.equals(sqlCommandType) ? Jdbc3KeyGenerator.INSTANCE : NoKeyGenerator.INSTANCE; String logId = id; if (configuration.getLogPrefix() != null) { logId = configuration.getLogPrefix() + id; } mappedStatement.statementLog = LogFactory.getLog(logId); mappedStatement.lang = configuration.getDefaultScriptingLanguageInstance(); } public Builder resource(String resource) { mappedStatement.resource = resource; return this; } public String id() { return mappedStatement.id; } public Builder parameterMap(ParameterMap parameterMap) { mappedStatement.parameterMap = parameterMap; return this; } public Builder resultMaps(List&lt;ResultMap&gt; resultMaps) { mappedStatement.resultMaps = resultMaps; for (ResultMap resultMap : resultMaps) { mappedStatement.hasNestedResultMaps = mappedStatement.hasNestedResultMaps || resultMap.hasNestedResultMaps(); } return this; } public Builder fetchSize(Integer fetchSize) { mappedStatement.fetchSize = fetchSize; return this; } public Builder timeout(Integer timeout) { mappedStatement.timeout = timeout; return this; } public Builder statementType(StatementType statementType) { mappedStatement.statementType = statementType; return this; } public Builder resultSetType(ResultSetType resultSetType) { mappedStatement.resultSetType = resultSetType == null ? ResultSetType.DEFAULT : resultSetType; return this; } public Builder cache(Cache cache) { mappedStatement.cache = cache; return this; } public Builder flushCacheRequired(boolean flushCacheRequired) { mappedStatement.flushCacheRequired = flushCacheRequired; return this; } public Builder useCache(boolean useCache) { mappedStatement.useCache = useCache; return this; } public Builder resultOrdered(boolean resultOrdered) { mappedStatement.resultOrdered = resultOrdered; return this; } public Builder keyGenerator(KeyGenerator keyGenerator) { mappedStatement.keyGenerator = keyGenerator; return this; } public Builder keyProperty(String keyProperty) { mappedStatement.keyProperties = delimitedStringToArray(keyProperty); return this; } public Builder keyColumn(String keyColumn) { mappedStatement.keyColumns = delimitedStringToArray(keyColumn); return this; } public Builder databaseId(String databaseId) { mappedStatement.databaseId = databaseId; return this; } public Builder lang(LanguageDriver driver) { mappedStatement.lang = driver; return this; } public Builder resultSets(String resultSet) { mappedStatement.resultSets = delimitedStringToArray(resultSet); return this; } /** * Resul sets. * * @param resultSet * the result set * @return the builder * @deprecated Use {@link #resultSets} */ @Deprecated public Builder resulSets(String resultSet) { mappedStatement.resultSets = delimitedStringToArray(resultSet); return this; } public MappedStatement build() { assert mappedStatement.configuration != null; assert mappedStatement.id != null; assert mappedStatement.sqlSource != null; assert mappedStatement.lang != null; mappedStatement.resultMaps = Collections.unmodifiableList(mappedStatement.resultMaps); return mappedStatement; } } public KeyGenerator getKeyGenerator() { return keyGenerator; } public SqlCommandType getSqlCommandType() { return sqlCommandType; } public String getResource() { return resource; } public Configuration getConfiguration() { return configuration; } public String getId() { return id; } public boolean hasNestedResultMaps() { return hasNestedResultMaps; } public Integer getFetchSize() { return fetchSize; } public Integer getTimeout() { return timeout; } public StatementType getStatementType() { return statementType; } public ResultSetType getResultSetType() { return resultSetType; } public SqlSource getSqlSource() { return sqlSource; } public ParameterMap getParameterMap() { return parameterMap; } public List&lt;ResultMap&gt; getResultMaps() { return resultMaps; } public Cache getCache() { return cache; } public boolean isFlushCacheRequired() { return flushCacheRequired; } public boolean isUseCache() { return useCache; } public boolean isResultOrdered() { return resultOrdered; } public String getDatabaseId() { return databaseId; } public String[] getKeyProperties() { return keyProperties; } public String[] getKeyColumns() { return keyColumns; } public Log getStatementLog() { return statementLog; } public LanguageDriver getLang() { return lang; } public String[] getResultSets() { return resultSets; } /** * Gets the resul sets. * * @return the resul sets * @deprecated Use {@link #getResultSets()} */ @Deprecated public String[] getResulSets() { return resultSets; } public BoundSql getBoundSql(Object parameterObject) { BoundSql boundSql = sqlSource.getBoundSql(parameterObject); List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings(); if (parameterMappings == null || parameterMappings.isEmpty()) { boundSql = new BoundSql(configuration, boundSql.getSql(), parameterMap.getParameterMappings(), parameterObject); } // check for nested result maps in parameter mappings (issue #30) for (ParameterMapping pm : boundSql.getParameterMappings()) { String rmId = pm.getResultMapId(); if (rmId != null) { ResultMap rm = configuration.getResultMap(rmId); if (rm != null) { hasNestedResultMaps |= rm.hasNestedResultMaps(); } } } return boundSql; } private static String[] delimitedStringToArray(String in) { if (in == null || in.trim().length() == 0) { return null; } else { return in.split(\\",\\"); } } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/MyBatis/MyBatis%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90%20%E2%80%94%E2%80%94%20mapping-%E5%8C%85%E7%9B%B8%E5%85%B3.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"MyBatis源码剖析 —— mapping 包相关"}],["meta",{"property":"og:description","content":"package org.apache.ibatis.mapping; public final class MappedStatement { private String resource; private Configuration configuration; private String id; private Integer fetchSize; private Integer timeout; private StatementType statementType; private ResultSetType resultSetType; private SqlSource sqlSource; private Cache cache; private ParameterMap parameterMap; private List&lt;ResultMap&gt; resultMaps; private boolean flushCacheRequired; private boolean useCache; private boolean resultOrdered; private SqlCommandType sqlCommandType; private KeyGenerator keyGenerator; private String[] keyProperties; private String[] keyColumns; private boolean hasNestedResultMaps; private String databaseId; private Log statementLog; private LanguageDriver lang; private String[] resultSets; MappedStatement() { // constructor disabled } public static class Builder { private MappedStatement mappedStatement = new MappedStatement(); public Builder(Configuration configuration, String id, SqlSource sqlSource, SqlCommandType sqlCommandType) { mappedStatement.configuration = configuration; mappedStatement.id = id; mappedStatement.sqlSource = sqlSource; mappedStatement.statementType = StatementType.PREPARED; mappedStatement.resultSetType = ResultSetType.DEFAULT; mappedStatement.parameterMap = new ParameterMap.Builder(configuration, \\"defaultParameterMap\\", null, new ArrayList&lt;&gt;()).build(); mappedStatement.resultMaps = new ArrayList&lt;&gt;(); mappedStatement.sqlCommandType = sqlCommandType; mappedStatement.keyGenerator = configuration.isUseGeneratedKeys() &amp;&amp; SqlCommandType.INSERT.equals(sqlCommandType) ? Jdbc3KeyGenerator.INSTANCE : NoKeyGenerator.INSTANCE; String logId = id; if (configuration.getLogPrefix() != null) { logId = configuration.getLogPrefix() + id; } mappedStatement.statementLog = LogFactory.getLog(logId); mappedStatement.lang = configuration.getDefaultScriptingLanguageInstance(); } public Builder resource(String resource) { mappedStatement.resource = resource; return this; } public String id() { return mappedStatement.id; } public Builder parameterMap(ParameterMap parameterMap) { mappedStatement.parameterMap = parameterMap; return this; } public Builder resultMaps(List&lt;ResultMap&gt; resultMaps) { mappedStatement.resultMaps = resultMaps; for (ResultMap resultMap : resultMaps) { mappedStatement.hasNestedResultMaps = mappedStatement.hasNestedResultMaps || resultMap.hasNestedResultMaps(); } return this; } public Builder fetchSize(Integer fetchSize) { mappedStatement.fetchSize = fetchSize; return this; } public Builder timeout(Integer timeout) { mappedStatement.timeout = timeout; return this; } public Builder statementType(StatementType statementType) { mappedStatement.statementType = statementType; return this; } public Builder resultSetType(ResultSetType resultSetType) { mappedStatement.resultSetType = resultSetType == null ? ResultSetType.DEFAULT : resultSetType; return this; } public Builder cache(Cache cache) { mappedStatement.cache = cache; return this; } public Builder flushCacheRequired(boolean flushCacheRequired) { mappedStatement.flushCacheRequired = flushCacheRequired; return this; } public Builder useCache(boolean useCache) { mappedStatement.useCache = useCache; return this; } public Builder resultOrdered(boolean resultOrdered) { mappedStatement.resultOrdered = resultOrdered; return this; } public Builder keyGenerator(KeyGenerator keyGenerator) { mappedStatement.keyGenerator = keyGenerator; return this; } public Builder keyProperty(String keyProperty) { mappedStatement.keyProperties = delimitedStringToArray(keyProperty); return this; } public Builder keyColumn(String keyColumn) { mappedStatement.keyColumns = delimitedStringToArray(keyColumn); return this; } public Builder databaseId(String databaseId) { mappedStatement.databaseId = databaseId; return this; } public Builder lang(LanguageDriver driver) { mappedStatement.lang = driver; return this; } public Builder resultSets(String resultSet) { mappedStatement.resultSets = delimitedStringToArray(resultSet); return this; } /** * Resul sets. * * @param resultSet * the result set * @return the builder * @deprecated Use {@link #resultSets} */ @Deprecated public Builder resulSets(String resultSet) { mappedStatement.resultSets = delimitedStringToArray(resultSet); return this; } public MappedStatement build() { assert mappedStatement.configuration != null; assert mappedStatement.id != null; assert mappedStatement.sqlSource != null; assert mappedStatement.lang != null; mappedStatement.resultMaps = Collections.unmodifiableList(mappedStatement.resultMaps); return mappedStatement; } } public KeyGenerator getKeyGenerator() { return keyGenerator; } public SqlCommandType getSqlCommandType() { return sqlCommandType; } public String getResource() { return resource; } public Configuration getConfiguration() { return configuration; } public String getId() { return id; } public boolean hasNestedResultMaps() { return hasNestedResultMaps; } public Integer getFetchSize() { return fetchSize; } public Integer getTimeout() { return timeout; } public StatementType getStatementType() { return statementType; } public ResultSetType getResultSetType() { return resultSetType; } public SqlSource getSqlSource() { return sqlSource; } public ParameterMap getParameterMap() { return parameterMap; } public List&lt;ResultMap&gt; getResultMaps() { return resultMaps; } public Cache getCache() { return cache; } public boolean isFlushCacheRequired() { return flushCacheRequired; } public boolean isUseCache() { return useCache; } public boolean isResultOrdered() { return resultOrdered; } public String getDatabaseId() { return databaseId; } public String[] getKeyProperties() { return keyProperties; } public String[] getKeyColumns() { return keyColumns; } public Log getStatementLog() { return statementLog; } public LanguageDriver getLang() { return lang; } public String[] getResultSets() { return resultSets; } /** * Gets the resul sets. * * @return the resul sets * @deprecated Use {@link #getResultSets()} */ @Deprecated public String[] getResulSets() { return resultSets; } public BoundSql getBoundSql(Object parameterObject) { BoundSql boundSql = sqlSource.getBoundSql(parameterObject); List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings(); if (parameterMappings == null || parameterMappings.isEmpty()) { boundSql = new BoundSql(configuration, boundSql.getSql(), parameterMap.getParameterMappings(), parameterObject); } // check for nested result maps in parameter mappings (issue #30) for (ParameterMapping pm : boundSql.getParameterMappings()) { String rmId = pm.getResultMapId(); if (rmId != null) { ResultMap rm = configuration.getResultMap(rmId); if (rm != null) { hasNestedResultMaps |= rm.hasNestedResultMaps(); } } } return boundSql; } private static String[] delimitedStringToArray(String in) { if (in == null || in.trim().length() == 0) { return null; } else { return in.split(\\",\\"); } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"MyBatis"}],["meta",{"property":"article:tag","content":"框架源码系列"}],["meta",{"property":"article:published_time","content":"2021-08-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MyBatis源码剖析 —— mapping 包相关\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":1.99,"words":596},"filePathRelative":"posts/MyBatis/MyBatis源码剖析 —— mapping-包相关.md","localizedDate":"2021年8月8日","excerpt":"<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>ibatis<span class=\\"token punctuation\\">.</span>mapping</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">MappedStatement</span> <span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> resource<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Configuration</span> configuration<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> fetchSize<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> timeout<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">StatementType</span> statementType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">ResultSetType</span> resultSetType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">SqlSource</span> sqlSource<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Cache</span> cache<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">ParameterMap</span> parameterMap<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ResultMap</span><span class=\\"token punctuation\\">&gt;</span></span> resultMaps<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">boolean</span> flushCacheRequired<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">boolean</span> useCache<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">boolean</span> resultOrdered<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">SqlCommandType</span> sqlCommandType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">KeyGenerator</span> keyGenerator<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> keyProperties<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> keyColumns<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">boolean</span> hasNestedResultMaps<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> databaseId<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Log</span> statementLog<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">LanguageDriver</span> lang<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> resultSets<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token class-name\\">MappedStatement</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// constructor disabled</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">MappedStatement</span> mappedStatement <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">MappedStatement</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Configuration</span> configuration<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> id<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">SqlSource</span> sqlSource<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">SqlCommandType</span> sqlCommandType<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>configuration <span class=\\"token operator\\">=</span> configuration<span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>id <span class=\\"token operator\\">=</span> id<span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>sqlSource <span class=\\"token operator\\">=</span> sqlSource<span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>statementType <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">StatementType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">PREPARED</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultSetType <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">ResultSetType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DEFAULT</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>parameterMap <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ParameterMap<span class=\\"token punctuation\\">.</span>Builder</span><span class=\\"token punctuation\\">(</span>configuration<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"defaultParameterMap\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultMaps <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ArrayList</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>sqlCommandType <span class=\\"token operator\\">=</span> sqlCommandType<span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>keyGenerator <span class=\\"token operator\\">=</span> configuration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isUseGeneratedKeys</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token class-name\\">SqlCommandType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INSERT</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>sqlCommandType<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">?</span> <span class=\\"token class-name\\">Jdbc3KeyGenerator</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INSTANCE</span> <span class=\\"token operator\\">:</span> <span class=\\"token class-name\\">NoKeyGenerator</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">INSTANCE</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token class-name\\">String</span> logId <span class=\\"token operator\\">=</span> id<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>configuration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getLogPrefix</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        logId <span class=\\"token operator\\">=</span> configuration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getLogPrefix</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> id<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>statementLog <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">LogFactory</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getLog</span><span class=\\"token punctuation\\">(</span>logId<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>lang <span class=\\"token operator\\">=</span> configuration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getDefaultScriptingLanguageInstance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resource</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> resource<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resource <span class=\\"token operator\\">=</span> resource<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">id</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> mappedStatement<span class=\\"token punctuation\\">.</span>id<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">parameterMap</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ParameterMap</span> parameterMap<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>parameterMap <span class=\\"token operator\\">=</span> parameterMap<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resultMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ResultMap</span><span class=\\"token punctuation\\">&gt;</span></span> resultMaps<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultMaps <span class=\\"token operator\\">=</span> resultMaps<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ResultMap</span> resultMap <span class=\\"token operator\\">:</span> resultMaps<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        mappedStatement<span class=\\"token punctuation\\">.</span>hasNestedResultMaps <span class=\\"token operator\\">=</span> mappedStatement<span class=\\"token punctuation\\">.</span>hasNestedResultMaps <span class=\\"token operator\\">||</span> resultMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hasNestedResultMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">fetchSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Integer</span> fetchSize<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>fetchSize <span class=\\"token operator\\">=</span> fetchSize<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">timeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Integer</span> timeout<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>timeout <span class=\\"token operator\\">=</span> timeout<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">statementType</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StatementType</span> statementType<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>statementType <span class=\\"token operator\\">=</span> statementType<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resultSetType</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ResultSetType</span> resultSetType<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultSetType <span class=\\"token operator\\">=</span> resultSetType <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">?</span> <span class=\\"token class-name\\">ResultSetType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DEFAULT</span> <span class=\\"token operator\\">:</span> resultSetType<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">cache</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Cache</span> cache<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>cache <span class=\\"token operator\\">=</span> cache<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">flushCacheRequired</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">boolean</span> flushCacheRequired<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>flushCacheRequired <span class=\\"token operator\\">=</span> flushCacheRequired<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">useCache</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">boolean</span> useCache<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>useCache <span class=\\"token operator\\">=</span> useCache<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resultOrdered</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">boolean</span> resultOrdered<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultOrdered <span class=\\"token operator\\">=</span> resultOrdered<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">keyGenerator</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">KeyGenerator</span> keyGenerator<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>keyGenerator <span class=\\"token operator\\">=</span> keyGenerator<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">keyProperty</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> keyProperty<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>keyProperties <span class=\\"token operator\\">=</span> <span class=\\"token function\\">delimitedStringToArray</span><span class=\\"token punctuation\\">(</span>keyProperty<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">keyColumn</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> keyColumn<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>keyColumns <span class=\\"token operator\\">=</span> <span class=\\"token function\\">delimitedStringToArray</span><span class=\\"token punctuation\\">(</span>keyColumn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">databaseId</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> databaseId<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>databaseId <span class=\\"token operator\\">=</span> databaseId<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">lang</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">LanguageDriver</span> driver<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>lang <span class=\\"token operator\\">=</span> driver<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resultSets</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> resultSet<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultSets <span class=\\"token operator\\">=</span> <span class=\\"token function\\">delimitedStringToArray</span><span class=\\"token punctuation\\">(</span>resultSet<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * Resul sets.\\n     *\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">resultSet</span>\\n     *          the result set\\n     * <span class=\\"token keyword\\">@return</span> the builder\\n     * <span class=\\"token keyword\\">@deprecated</span> Use <span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">@link</span> <span class=\\"token reference\\"><span class=\\"token punctuation\\">#</span><span class=\\"token field\\">resultSets</span></span><span class=\\"token punctuation\\">}</span>\\n     */</span>\\n    <span class=\\"token annotation punctuation\\">@Deprecated</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Builder</span> <span class=\\"token function\\">resulSets</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> resultSet<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultSets <span class=\\"token operator\\">=</span> <span class=\\"token function\\">delimitedStringToArray</span><span class=\\"token punctuation\\">(</span>resultSet<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">MappedStatement</span> <span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">assert</span> mappedStatement<span class=\\"token punctuation\\">.</span>configuration <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">assert</span> mappedStatement<span class=\\"token punctuation\\">.</span>id <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">assert</span> mappedStatement<span class=\\"token punctuation\\">.</span>sqlSource <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">assert</span> mappedStatement<span class=\\"token punctuation\\">.</span>lang <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n      mappedStatement<span class=\\"token punctuation\\">.</span>resultMaps <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Collections</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">unmodifiableList</span><span class=\\"token punctuation\\">(</span>mappedStatement<span class=\\"token punctuation\\">.</span>resultMaps<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">return</span> mappedStatement<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">KeyGenerator</span> <span class=\\"token function\\">getKeyGenerator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> keyGenerator<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">SqlCommandType</span> <span class=\\"token function\\">getSqlCommandType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> sqlCommandType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getResource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resource<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Configuration</span> <span class=\\"token function\\">getConfiguration</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> configuration<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> id<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">hasNestedResultMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> hasNestedResultMaps<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Integer</span> <span class=\\"token function\\">getFetchSize</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> fetchSize<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Integer</span> <span class=\\"token function\\">getTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> timeout<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">StatementType</span> <span class=\\"token function\\">getStatementType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> statementType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">ResultSetType</span> <span class=\\"token function\\">getResultSetType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resultSetType<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">SqlSource</span> <span class=\\"token function\\">getSqlSource</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> sqlSource<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">ParameterMap</span> <span class=\\"token function\\">getParameterMap</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> parameterMap<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ResultMap</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">getResultMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resultMaps<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Cache</span> <span class=\\"token function\\">getCache</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> cache<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isFlushCacheRequired</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> flushCacheRequired<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isUseCache</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> useCache<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isResultOrdered</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resultOrdered<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getDatabaseId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> databaseId<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token function\\">getKeyProperties</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> keyProperties<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token function\\">getKeyColumns</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> keyColumns<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Log</span> <span class=\\"token function\\">getStatementLog</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> statementLog<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">LanguageDriver</span> <span class=\\"token function\\">getLang</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> lang<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token function\\">getResultSets</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resultSets<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token doc-comment comment\\">/**\\n   * Gets the resul sets.\\n   *\\n   * <span class=\\"token keyword\\">@return</span> the resul sets\\n   * <span class=\\"token keyword\\">@deprecated</span> Use <span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">@link</span> <span class=\\"token reference\\"><span class=\\"token punctuation\\">#</span><span class=\\"token function\\">getResultSets</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">}</span>\\n   */</span>\\n  <span class=\\"token annotation punctuation\\">@Deprecated</span>\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token function\\">getResulSets</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> resultSets<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">BoundSql</span> <span class=\\"token function\\">getBoundSql</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> parameterObject<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">BoundSql</span> boundSql <span class=\\"token operator\\">=</span> sqlSource<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBoundSql</span><span class=\\"token punctuation\\">(</span>parameterObject<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ParameterMapping</span><span class=\\"token punctuation\\">&gt;</span></span> parameterMappings <span class=\\"token operator\\">=</span> boundSql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParameterMappings</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>parameterMappings <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> parameterMappings<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      boundSql <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">BoundSql</span><span class=\\"token punctuation\\">(</span>configuration<span class=\\"token punctuation\\">,</span> boundSql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getSql</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> parameterMap<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParameterMappings</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> parameterObject<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// check for nested result maps in parameter mappings (issue #30)</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ParameterMapping</span> pm <span class=\\"token operator\\">:</span> boundSql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParameterMappings</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token class-name\\">String</span> rmId <span class=\\"token operator\\">=</span> pm<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getResultMapId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>rmId <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">ResultMap</span> rm <span class=\\"token operator\\">=</span> configuration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getResultMap</span><span class=\\"token punctuation\\">(</span>rmId<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>rm <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          hasNestedResultMaps <span class=\\"token operator\\">|=</span> rm<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">hasNestedResultMaps</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">return</span> boundSql<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token function\\">delimitedStringToArray</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> in<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>in <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">||</span> in<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">trim</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">length</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> in<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\",\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
