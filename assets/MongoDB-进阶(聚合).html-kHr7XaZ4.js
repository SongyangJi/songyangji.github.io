import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as l,c as i,b as e,d as n,e as t,a as s}from"./app-CN-Tp3xY.js";const d={},p=e("h1",{id:"聚合",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#聚合","aria-hidden":"true"},"#"),n(" 聚合")],-1),c=e("p",null,"什么是聚合管道？",-1),u=e("li",null,[e("strong",null,"聚合管道是基于数据处理管道概念建模的数据聚合框架"),n("。")],-1),g=e("li",null,[n("文档进入"),e("strong",null,"多阶段管道"),n("，将文档转换为聚合结果。")],-1),_=e("li",null,[n("MongoDB 聚合管道由"),e("strong",null,"阶段"),n("组成。每个阶段都会在文档通过管道时对其进行转换。")],-1),m={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/out/#mongodb-pipeline-pipe.-out",target:"_blank",rel:"noopener noreferrer"},h=e("code",null,"$out",-1),b={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/merge/#mongodb-pipeline-pipe.-merge",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"$merge",-1),k={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/geoNear/#mongodb-pipeline-pipe.-geoNear",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"$geoNear",-1),q=s(`<p><strong>语法</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.collection.aggregate<span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>stage<span class="token operator">&gt;</span> <span class="token punctuation">}</span>, <span class="token punctuation">..</span>. <span class="token punctuation">]</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="聚合管道的阶段" tabindex="-1"><a class="header-anchor" href="#聚合管道的阶段" aria-hidden="true">#</a> 聚合管道的阶段</h2><p>这里只列出最常用的，完整请看参考文档。</p>`,4),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"阶段"),e("th",{style:{"text-align":"left"}},"描述")])],-1),x={style:{"text-align":"left"}},$={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/addFields/#mongodb-pipeline-pipe.-addFields",target:"_blank",rel:"noopener noreferrer"},F=e("code",null,"$addFields",-1),w={style:{"text-align":"left"}},S={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/project/#mongodb-pipeline-pipe.-project",target:"_blank",rel:"noopener noreferrer"},W=e("code",null,"$project",-1),j={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/addFields/#mongodb-pipeline-pipe.-addFields",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"$addFields",-1),A={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/set/#mongodb-pipeline-pipe.-set",target:"_blank",rel:"noopener noreferrer"},D=e("code",null,"$set",-1),R={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/addFields/#mongodb-pipeline-pipe.-addFields",target:"_blank",rel:"noopener noreferrer"},B=e("code",null,"$addFields",-1),C={style:{"text-align":"left"}},I={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/count/#mongodb-pipeline-pipe.-count",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"$count",-1),N={style:{"text-align":"left"}},T={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/count-accumulator/#mongodb-group-grp.-count",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"$count",-1),L={style:{"text-align":"left"}},V={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"$group",-1),Y=e("td",{style:{"text-align":"left"}},"按指定的标识符表达式对输入文档进行分组，并将累加器表达式（如果指定）应用于每个组。使用所有输入文档并为每个不同的组输出一个文档。输出文档仅包含标识符字段和累积字段（如果指定）。",-1),G={style:{"text-align":"left"}},H={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/limit/#mongodb-pipeline-pipe.-limit",target:"_blank",rel:"noopener noreferrer"},J=e("code",null,"$limit",-1),P=e("td",{style:{"text-align":"left"}},[n("将未修改的前"),e("em",null,"n 个"),n("文档传递到管道，其中"),e("em",null,"n"),n("是指定的限制。对于每个输入文档，输出一个文档（对于前"),e("em",null,"n 个"),n("文档）或零个文档（在前"),e("em",null,"n 个"),n("文档之后）。")],-1),U={style:{"text-align":"left"}},z={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},K=e("code",null,"$lookup",-1),X=e("td",{style:{"text-align":"left"}},[n("对"),e("em",null,"同一"),n("数据库中的另一个集合执行左外部 联接，以从“联接”集合中过滤文档以进行处理。")],-1),Z={style:{"text-align":"left"}},ee={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match",target:"_blank",rel:"noopener noreferrer"},ne=e("code",null,"$match",-1),oe={style:{"text-align":"left"}},te={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match",target:"_blank",rel:"noopener noreferrer"},se=e("code",null,"$match",-1),ae={style:{"text-align":"left"}},re={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/merge/#mongodb-pipeline-pipe.-merge",target:"_blank",rel:"noopener noreferrer"},le=e("code",null,"$merge",-1),ie={style:{"text-align":"left"}},de={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/merge/#mongodb-pipeline-pipe.-merge",target:"_blank",rel:"noopener noreferrer"},pe=e("code",null,"$merge",-1),ce=e("em",null,"4.2版中的新功能",-1),ue={style:{"text-align":"left"}},ge={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/out/#mongodb-pipeline-pipe.-out",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"$out",-1),me={style:{"text-align":"left"}},he={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/out/#mongodb-pipeline-pipe.-out",target:"_blank",rel:"noopener noreferrer"},be=e("code",null,"$out",-1),fe={style:{"text-align":"left"}},ke={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/planCacheStats/#mongodb-pipeline-pipe.-planCacheStats",target:"_blank",rel:"noopener noreferrer"},ve=e("code",null,"$planCacheStats",-1),qe={style:{"text-align":"left"}},ye={href:"https://docs.mongodb.com/manual/core/query-plans/",target:"_blank",rel:"noopener noreferrer"},xe={style:{"text-align":"left"}},$e={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/project/#mongodb-pipeline-pipe.-project",target:"_blank",rel:"noopener noreferrer"},Fe=e("code",null,"$project",-1),we={style:{"text-align":"left"}},Se={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/unset/#mongodb-pipeline-pipe.-unset",target:"_blank",rel:"noopener noreferrer"},We=e("code",null,"$unset",-1),je={style:{"text-align":"left"}},Ee={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/replaceWith/#mongodb-pipeline-pipe.-replaceWith",target:"_blank",rel:"noopener noreferrer"},Ae=e("code",null,"$replaceWith",-1),De={style:{"text-align":"left"}},Re=e("code",null,"_id",-1),Be={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/replaceWith/#mongodb-pipeline-pipe.-replaceWith",target:"_blank",rel:"noopener noreferrer"},Ce=e("code",null,"$replaceWith",-1),Ie={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/replaceRoot/#mongodb-pipeline-pipe.-replaceRoot",target:"_blank",rel:"noopener noreferrer"},Me=e("code",null,"$replaceRoot",-1),Ne={style:{"text-align":"left"}},Te={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sample/#mongodb-pipeline-pipe.-sample",target:"_blank",rel:"noopener noreferrer"},Oe=e("code",null,"$sample",-1),Le=e("td",{style:{"text-align":"left"}},"从其输入中随机选择指定数量的文档。",-1),Ve={style:{"text-align":"left"}},Qe={href:"https://docs.atlas.mongodb.com/reference/atlas-search/query-syntax/#mongodb-pipeline-pipe.-search",target:"_blank",rel:"noopener noreferrer"},Ye=e("code",null,"$search",-1),Ge={style:{"text-align":"left"}},He={href:"https://docs.atlas.mongodb.com/reference/atlas-search/query-syntax/",target:"_blank",rel:"noopener noreferrer"},Je=e("code",null,"$search",-1),Pe={style:{"text-align":"left"}},Ue={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/set/#mongodb-pipeline-pipe.-set",target:"_blank",rel:"noopener noreferrer"},ze=e("code",null,"$set",-1),Ke={style:{"text-align":"left"}},Xe={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/project/#mongodb-pipeline-pipe.-project",target:"_blank",rel:"noopener noreferrer"},Ze=e("code",null,"$project",-1),en={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/set/#mongodb-pipeline-pipe.-set",target:"_blank",rel:"noopener noreferrer"},nn=e("code",null,"$set",-1),on={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/set/#mongodb-pipeline-pipe.-set",target:"_blank",rel:"noopener noreferrer"},tn=e("code",null,"$set",-1),sn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/addFields/#mongodb-pipeline-pipe.-addFields",target:"_blank",rel:"noopener noreferrer"},an=e("code",null,"$addFields",-1),rn={style:{"text-align":"left"}},ln={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/skip/#mongodb-pipeline-pipe.-skip",target:"_blank",rel:"noopener noreferrer"},dn=e("code",null,"$skip",-1),pn=e("td",{style:{"text-align":"left"}},[n("跳过前"),e("em",null,"n 个"),n("文档，其中"),e("em",null,"n"),n("是指定的跳过编号，并将未修改的剩余文档传递到管道。对于每个输入文档，输出零个文档（对于前"),e("em",null,"n 个"),n("文档）或一个文档（如果在前"),e("em",null,"n 个"),n("文档之后）。")],-1),cn={style:{"text-align":"left"}},un={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sort/#mongodb-pipeline-pipe.-sort",target:"_blank",rel:"noopener noreferrer"},gn=e("code",null,"$sort",-1),_n=e("td",{style:{"text-align":"left"}},"按指定的排序键对文档流重新排序。只是顺序变了；文件保持不变。对于每个输入文档，输出一个文档。",-1),mn={style:{"text-align":"left"}},hn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/unionWith/#mongodb-pipeline-pipe.-unionWith",target:"_blank",rel:"noopener noreferrer"},bn=e("code",null,"$unionWith",-1),fn=e("td",{style:{"text-align":"left"}},[n("执行两个集合的并集；ie 将来自两个集合的管道结果合并为一个结果集。"),e("em",null,"4.4版中的新功能"),n("。")],-1),kn={style:{"text-align":"left"}},vn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/unset/#mongodb-pipeline-pipe.-unset",target:"_blank",rel:"noopener noreferrer"},qn=e("code",null,"$unset",-1),yn={style:{"text-align":"left"}},xn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/unset/#mongodb-pipeline-pipe.-unset",target:"_blank",rel:"noopener noreferrer"},$n=e("code",null,"$unset",-1),Fn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/project/#mongodb-pipeline-pipe.-project",target:"_blank",rel:"noopener noreferrer"},wn=e("code",null,"$project",-1),Sn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/",target:"_blank",rel:"noopener noreferrer"},Wn=e("h2",{id:"聚合管道表达式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#聚合管道表达式","aria-hidden":"true"},"#"),n(" 聚合管道表达式")],-1),jn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/",target:"_blank",rel:"noopener noreferrer"},En=s('<h1 id="常用例子" tabindex="-1"><a class="header-anchor" href="#常用例子" aria-hidden="true">#</a> 常用例子</h1><h2 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> group</h2><h3 id="含义与作用" tabindex="-1"><a class="header-anchor" href="#含义与作用" aria-hidden="true">#</a> 含义与作用</h3>',3),An=e("code",null,"_id",-1),Dn=e("code",null,"_id",-1),Rn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/group/#std-label-accumulators-group",target:"_blank",rel:"noopener noreferrer"},Bn=s(`<h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  $group:
    {
      _id: &lt;expression&gt;, // Group By Expression
      &lt;field1&gt;: { &lt;accumulator1&gt; : &lt;expression1&gt; },
      ...
    }
 }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Cn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Field"),e("th",{style:{"text-align":"left"}},"Description")])],-1),In=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"_id")]),e("td",{style:{"text-align":"left"}},[e("em",null,"必须的"),n("。如果指定null或者常量，相当于不分组。")])],-1),Mn=e("td",{style:{"text-align":"left"}},[e("code",null,"field")],-1),Nn={style:{"text-align":"left"}},Tn=e("em",null,"可选的.",-1),On={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/group/#std-label-accumulators-group",target:"_blank",rel:"noopener noreferrer"},Ln=e("p",null,[n("常用的 "),e("strong",null,"累加器运算符"),n("：")],-1),Vn=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"描述")])],-1),Qn={style:{"text-align":"left"}},Yn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/avg/#mongodb-group-grp.-avg",target:"_blank",rel:"noopener noreferrer"},Gn=e("code",null,"$avg",-1),Hn={style:{"text-align":"left"}},Jn=e("em",null,"在5.0版更改",-1),Pn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},Un=e("code",null,"$setWindowFields",-1),zn={style:{"text-align":"left"}},Kn={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/count-accumulator/#mongodb-group-grp.-count",target:"_blank",rel:"noopener noreferrer"},Xn=e("code",null,"$count",-1),Zn={style:{"text-align":"left"}},eo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/count/#mongodb-pipeline-pipe.-count",target:"_blank",rel:"noopener noreferrer"},no=e("code",null,"$count",-1),oo=e("em",null,"5.0版中的新功能",-1),to={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},so=e("code",null,"$group",-1),ao={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},ro=e("code",null,"$setWindowFields",-1),lo={style:{"text-align":"left"}},io={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/first/#mongodb-group-grp.-first",target:"_blank",rel:"noopener noreferrer"},po=e("code",null,"$first",-1),co={style:{"text-align":"left"}},uo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/first-array-element/#mongodb-expression-exp.-first",target:"_blank",rel:"noopener noreferrer"},go=e("code",null,"$first",-1),_o=e("em",null,"在5.0版更改",-1),mo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},ho=e("code",null,"$setWindowFields",-1),bo={style:{"text-align":"left"}},fo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/last/#mongodb-group-grp.-last",target:"_blank",rel:"noopener noreferrer"},ko=e("code",null,"$last",-1),vo={style:{"text-align":"left"}},qo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/last-array-element/#mongodb-expression-exp.-last",target:"_blank",rel:"noopener noreferrer"},yo=e("code",null,"$last",-1),xo=e("em",null,"在5.0版更改",-1),$o={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},Fo=e("code",null,"$setWindowFields",-1),wo={style:{"text-align":"left"}},So={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/max/#mongodb-group-grp.-max",target:"_blank",rel:"noopener noreferrer"},Wo=e("code",null,"$max",-1),jo={style:{"text-align":"left"}},Eo=e("em",null,"在5.0版更改",-1),Ao={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},Do=e("code",null,"$setWindowFields",-1),Ro={style:{"text-align":"left"}},Bo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/min/#mongodb-group-grp.-min",target:"_blank",rel:"noopener noreferrer"},Co=e("code",null,"$min",-1),Io={style:{"text-align":"left"}},Mo=e("em",null,"在5.0版更改",-1),No={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},To=e("code",null,"$setWindowFields",-1),Oo={style:{"text-align":"left"}},Lo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sum/#mongodb-group-grp.-sum",target:"_blank",rel:"noopener noreferrer"},Vo=e("code",null,"$sum",-1),Qo={style:{"text-align":"left"}},Yo=e("em",null,"在5.0版更改",-1),Go={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/setWindowFields/#mongodb-pipeline-pipe.-setWindowFields",target:"_blank",rel:"noopener noreferrer"},Ho=e("code",null,"$setWindowFields",-1),Jo=s(`<h3 id="小例子" tabindex="-1"><a class="header-anchor" href="#小例子" aria-hidden="true">#</a> 小例子</h3><ol><li>以下聚合操作按<code>item</code> 字段对文档进行分组，计算每个商品的总销售额并仅返回总销售额大于或等于 100 的商品：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.sales.aggregate(
  [
    // First Stage
    {
      $group :
        {
          _id : &quot;$item&quot;,
          totalSaleAmount: { $sum: { $multiply: [ &quot;$price&quot;, &quot;$quantity&quot; ] } }
        }
     },
     // Second Stage
     {
       $match: { &quot;totalSaleAmount&quot;: { $gte: 100 } }
     }
   ]
 )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>计算计数、总和和平均值</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.sales.aggregate([
  // First Stage
  {
    $match : { &quot;date&quot;: { $gte: new ISODate(&quot;2014-01-01&quot;), $lt: new ISODate(&quot;2015-01-01&quot;) } }
  },
  // Second Stage
  {
    $group : {
       _id : { $dateToString: { format: &quot;%Y-%m-%d&quot;, date: &quot;$date&quot; } },
       totalSaleAmount: { $sum: { $multiply: [ &quot;$price&quot;, &quot;$quantity&quot; ] } },
       averageQuantity: { $avg: &quot;$quantity&quot; },
       count: { $sum: 1 }
    }
  },
  // Third Stage
  {
    $sort : { totalSaleAmount: -1 }
  }
 ])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Po=e("p",null,"第一阶段：",-1),Uo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match",target:"_blank",rel:"noopener noreferrer"},zo=e("code",null,"$match",-1),Ko=e("p",null,"第二阶段：",-1),Xo={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/group/#mongodb-pipeline-pipe.-group",target:"_blank",rel:"noopener noreferrer"},Zo=e("code",null,"$group",-1),et=e("p",null,"第三阶段：",-1),nt={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/sort/#mongodb-pipeline-pipe.-sort",target:"_blank",rel:"noopener noreferrer"},ot=e("code",null,"$sort",-1),tt=s(`<p>相当于如下SQL</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">,</span>
       <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span> price <span class="token operator">*</span> quantity <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> totalSaleAmount<span class="token punctuation">,</span>
       <span class="token function">Avg</span><span class="token punctuation">(</span>quantity<span class="token punctuation">)</span>             <span class="token keyword">AS</span> averageQuantity<span class="token punctuation">,</span>
       <span class="token function">Count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>                  <span class="token keyword">AS</span> Count
<span class="token keyword">FROM</span>   sales
<span class="token keyword">GROUP</span>  <span class="token keyword">BY</span> <span class="token keyword">Date</span><span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">)</span>
<span class="token keyword">ORDER</span>  <span class="token keyword">BY</span> totalSaleAmount <span class="token keyword">DESC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lookup实现关联查询" tabindex="-1"><a class="header-anchor" href="#lookup实现关联查询" aria-hidden="true">#</a> lookup实现关联查询</h2>`,3),st={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/",target:"_blank",rel:"noopener noreferrer"},at=s(`<h3 id="含义与作用-1" tabindex="-1"><a class="header-anchor" href="#含义与作用-1" aria-hidden="true">#</a> 含义与作用</h3><p>对<em>同一</em> 数据库中的未分片集合执行左外部联接，以从“联接”集合中过滤文档以进行处理。对于每个输入文档，lookup阶段会添加一个新的数组字段，其元素是“joined”集合中的匹配文档。该lookup阶段将这些重塑的文档传递到下一阶段。</p><h3 id="语法-1" tabindex="-1"><a class="header-anchor" href="#语法-1" aria-hidden="true">#</a> 语法</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
   <span class="token variable">$lookup</span><span class="token builtin class-name">:</span>
     <span class="token punctuation">{</span>
       from: <span class="token operator">&lt;</span>collection to join<span class="token operator">&gt;</span>,
       localField: <span class="token operator">&lt;</span>field from the input documents<span class="token operator">&gt;</span>,
       foreignField: <span class="token operator">&lt;</span>field from the documents of the <span class="token string">&quot;from&quot;</span> collection<span class="token operator">&gt;</span>,
       as: <span class="token operator">&lt;</span>output array field<span class="token operator">&gt;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体的字段的含义是：</p>`,5),rt=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Field"),e("th",{style:{"text-align":"left"}},"Description")])],-1),lt={style:{"text-align":"left"}},it={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#std-label-lookup-eq-from",target:"_blank",rel:"noopener noreferrer"},dt={style:{"text-align":"left"}},pt=e("em",null,"same",-1),ct=e("code",null,"from",-1),ut={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#std-label-lookup-sharded-collections",target:"_blank",rel:"noopener noreferrer"},gt={style:{"text-align":"left"}},_t={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#std-label-lookup-eq-localField",target:"_blank",rel:"noopener noreferrer"},mt={style:{"text-align":"left"}},ht={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},bt=e("code",null,"$lookup",-1),ft={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},kt=e("code",null,"$lookup",-1),vt=e("code",null,"localField",-1),qt=e("code",null,"foreignField",-1),yt=e("code",null,"from",-1),xt=e("code",null,"localField",-1),$t={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},Ft=e("code",null,"$lookup",-1),wt=e("code",null,"null",-1),St={style:{"text-align":"left"}},Wt={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#std-label-lookup-eq-foreignField",target:"_blank",rel:"noopener noreferrer"},jt={style:{"text-align":"left"}},Et=e("code",null,"from",-1),At={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},Dt=e("code",null,"$lookup",-1),Rt=e("code",null,"foreignField",-1),Bt=e("code",null,"localField",-1),Ct=e("code",null,"from",-1),It=e("code",null,"foreignField",-1),Mt={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup",target:"_blank",rel:"noopener noreferrer"},Nt=e("code",null,"$lookup",-1),Tt=e("code",null,"null",-1),Ot={style:{"text-align":"left"}},Lt={href:"https://docs.mongodb.com/manual/reference/operator/aggregation/lookup/#std-label-lookup-eq-as",target:"_blank",rel:"noopener noreferrer"},Vt=e("td",{style:{"text-align":"left"}},[n("Specifies the name of the new array field to add to the input documents. The new array field contains the matching documents from the "),e("code",null,"from"),n(" collection. If the specified name already exists in the input document, the existing field is "),e("em",null,"overwritten"),n(".")],-1),Qt=s(`<p>上面的查询语句等效为：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>output array field<span class="token operator">&gt;</span>
<span class="token keyword">FROM</span> collection
<span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>output array field<span class="token operator">&gt;</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>
   <span class="token keyword">SELECT</span> <span class="token operator">*</span>
   <span class="token keyword">FROM</span> <span class="token operator">&lt;</span>collection <span class="token keyword">to</span> <span class="token keyword">join</span><span class="token operator">&gt;</span>
   <span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>foreignField<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token operator">&lt;</span>collection<span class="token punctuation">.</span>localField<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="小例子-1" tabindex="-1"><a class="header-anchor" href="#小例子-1" aria-hidden="true">#</a> 小例子</h3><p>订单表</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.orders.insertMany( [
   { &quot;_id&quot; : 1, &quot;item&quot; : &quot;almonds&quot;, &quot;price&quot; : 12, &quot;quantity&quot; : 2 },
   { &quot;_id&quot; : 2, &quot;item&quot; : &quot;pecans&quot;, &quot;price&quot; : 20, &quot;quantity&quot; : 1 },
   { &quot;_id&quot; : 3  }
] )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>库存表</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.inventory.insertMany( [
   { &quot;_id&quot; : 1, &quot;sku&quot; : &quot;almonds&quot;, &quot;description&quot;: &quot;product 1&quot;, &quot;instock&quot; : 120 },
   { &quot;_id&quot; : 2, &quot;sku&quot; : &quot;bread&quot;, &quot;description&quot;: &quot;product 2&quot;, &quot;instock&quot; : 80 },
   { &quot;_id&quot; : 3, &quot;sku&quot; : &quot;cashews&quot;, &quot;description&quot;: &quot;product 3&quot;, &quot;instock&quot; : 60 },
   { &quot;_id&quot; : 4, &quot;sku&quot; : &quot;pecans&quot;, &quot;description&quot;: &quot;product 4&quot;, &quot;instock&quot; : 70 },
   { &quot;_id&quot; : 5, &quot;sku&quot;: null, &quot;description&quot;: &quot;Incomplete&quot; },
   { &quot;_id&quot; : 6 }
] )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询语句</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.orders.aggregate( [
   {
     $lookup:
       {
         from: &quot;inventory&quot;,
         localField: &quot;item&quot;,
         foreignField: &quot;sku&quot;,
         as: &quot;inventory_docs&quot;
       }
  }
] )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
   <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token property">&quot;item&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;almonds&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
   <span class="token property">&quot;quantity&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
   <span class="token property">&quot;inventory_docs&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;sku&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;almonds&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;description&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;product 1&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;instock&quot;</span> <span class="token operator">:</span> <span class="token number">120</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
   <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
   <span class="token property">&quot;item&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;pecans&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;price&quot;</span> <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
   <span class="token property">&quot;quantity&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token property">&quot;inventory_docs&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token property">&quot;sku&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;pecans&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;description&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;product 4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;instock&quot;</span> <span class="token operator">:</span> <span class="token number">70</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
   <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
   <span class="token property">&quot;inventory_docs&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token property">&quot;sku&quot;</span> <span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span> <span class="token property">&quot;description&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Incomplete&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">6</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function Yt(Gt,Ht){const o=r("ExternalLinkIcon");return l(),i("div",null,[p,c,e("ul",null,[u,g,_,e("li",null,[n("管道阶段可以在管道中多次出现，但"),e("a",m,[h,t(o)]),n("，"),e("a",b,[f,t(o)]),n("、 和 "),e("a",k,[v,t(o)]),n("阶段除外。（相当于 Java 流式计算的的最后一步归约操作）。")])]),q,e("table",null,[y,e("tbody",null,[e("tr",null,[e("td",x,[e("a",$,[F,t(o)])]),e("td",w,[n("向文档添加新字段。类似于 "),e("a",S,[W,t(o)]),n("，"),e("a",j,[E,t(o)]),n("对流中的每个文档进行整形；具体来说，通过向包含输入文档中现有字段和新添加字段的输出文档添加新字段。"),e("a",A,[D,t(o)]),n("是 的别名"),e("a",R,[B,t(o)]),n("。")])]),e("tr",null,[e("td",C,[e("a",I,[M,t(o)])]),e("td",N,[n("返回聚合管道此阶段的文档数计数。与"),e("a",T,[O,t(o)]),n("聚合累加器不同。")])]),e("tr",null,[e("td",L,[e("a",V,[Q,t(o)])]),Y]),e("tr",null,[e("td",G,[e("a",H,[J,t(o)])]),P]),e("tr",null,[e("td",U,[e("a",z,[K,t(o)])]),X]),e("tr",null,[e("td",Z,[e("a",ee,[ne,t(o)])]),e("td",oe,[n("过滤文档流以只允许匹配的文档未经修改地传递到下一个管道阶段。 "),e("a",te,[se,t(o)]),n("使用标准的 MongoDB 查询。对于每个输入文档，输出一个文档（匹配）或零个文档（不匹配）。")])]),e("tr",null,[e("td",ae,[e("a",re,[le,t(o)])]),e("td",ie,[n("将聚合管道的结果文档写入集合。该阶段可以将（插入新文档、合并文档、替换文档、保留现有文档、操作失败、使用自定义更新管道处理文档）结果合并到输出集合中。要使用该"),e("a",de,[pe,t(o)]),n("阶段，它必须是管道中的最后一个阶段。"),ce,n("。")])]),e("tr",null,[e("td",ue,[e("a",ge,[_e,t(o)])]),e("td",me,[n("将聚合管道的结果文档写入集合。要使用该"),e("a",he,[be,t(o)]),n("阶段，它必须是管道中的最后一个阶段。")])]),e("tr",null,[e("td",fe,[e("a",ke,[ve,t(o)])]),e("td",qe,[n("返回集合的"),e("a",ye,[n("计划缓存"),t(o)]),n("信息。")])]),e("tr",null,[e("td",xe,[e("a",$e,[Fe,t(o)])]),e("td",we,[n("重塑流中的每个文档，例如通过添加新字段或删除现有字段。对于每个输入文档，输出一个文档。另请参阅"),e("a",Se,[We,t(o)]),n("删除现有字段。")])]),e("tr",null,[e("td",je,[e("a",Ee,[Ae,t(o)])]),e("td",De,[n("用指定的嵌入文档替换文档。该操作替换输入文档中的所有现有字段，包括该"),Re,n("字段。指定嵌入在输入文档中的文档以将嵌入的文档提升到顶级。"),e("a",Be,[Ce,t(o)]),n("是"),e("a",Ie,[Me,t(o)]),n("stage的别名 。")])]),e("tr",null,[e("td",Ne,[e("a",Te,[Oe,t(o)])]),Le]),e("tr",null,[e("td",Ve,[e("a",Qe,[Ye,t(o)])]),e("td",Ge,[n("对"),e("a",He,[n("Atlas"),t(o)]),n(" 集合中的一个或多个字段执行全文搜索 。笔记"),Je,n(" 仅适用于 MongoDB Atlas 集群，不适用于自管理部署。")])]),e("tr",null,[e("td",Pe,[e("a",Ue,[ze,t(o)])]),e("td",Ke,[n("向文档添加新字段。类似于 "),e("a",Xe,[Ze,t(o)]),n("，"),e("a",en,[nn,t(o)]),n("对流中的每个文档进行整形；具体来说，通过向包含输入文档中现有字段和新添加字段的输出文档添加新字段。"),e("a",on,[tn,t(o)]),n("是"),e("a",sn,[an,t(o)]),n("stage的别名。")])]),e("tr",null,[e("td",rn,[e("a",ln,[dn,t(o)])]),pn]),e("tr",null,[e("td",cn,[e("a",un,[gn,t(o)])]),_n]),e("tr",null,[e("td",mn,[e("a",hn,[bn,t(o)])]),fn]),e("tr",null,[e("td",kn,[e("a",vn,[qn,t(o)])]),e("td",yn,[n("从文档中删除/排除字段。"),e("a",xn,[$n,t(o)]),n("是"),e("a",Fn,[wn,t(o)]),n("删除字段的阶段的别名。")])])])]),e("p",null,[e("a",Sn,[n("参考文档"),t(o)])]),Wn,e("blockquote",null,[e("p",null,[n("详细的 "),e("a",jn,[n("参考文档"),t(o)])])]),En,e("p",null,[n("按指定的"),An,n("表达式对输入文档进行分组，并为每个不同的分组输出一个文档。"),Dn,n("每个输出文档的字段都包含唯一的按值分组。输出文档还可以包含保存某些"),e("a",Rn,[n("累加器表达式"),t(o)]),n("值的计算字段。")]),Bn,e("table",null,[Cn,e("tbody",null,[In,e("tr",null,[Mn,e("td",Nn,[Tn,n(" 使用 "),e("a",On,[n("accumulator operators"),t(o)]),n(".计算")])])])]),Ln,e("table",null,[Vn,e("tbody",null,[e("tr",null,[e("td",Qn,[e("a",Yn,[Gn,t(o)])]),e("td",Hn,[n("返回数值的平均值。忽略非数字值。"),Jn,n("：在"),e("a",Pn,[Un,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",zn,[e("a",Kn,[Xn,t(o)])]),e("td",Zn,[n("返回组中的文档数。区别于"),e("a",eo,[no,t(o)]),n("流水线阶段。"),oo,n("：在"),e("a",to,[so,t(o)]),n("和 "),e("a",ao,[ro,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",lo,[e("a",io,[po,t(o)])]),e("td",co,[n("从每个组的第一个文档返回一个值。仅当文档已排序时才定义顺序。与"),e("a",uo,[go,t(o)]),n("数组运算符不同。"),_o,n("：在"),e("a",mo,[ho,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",bo,[e("a",fo,[ko,t(o)])]),e("td",vo,[n("从每个组的最后一个文档返回一个值。仅当文档已排序时才定义顺序。与"),e("a",qo,[yo,t(o)]),n("数组运算符不同。"),xo,n("：在"),e("a",$o,[Fo,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",wo,[e("a",So,[Wo,t(o)])]),e("td",jo,[n("返回每个组的最高表达式值。"),Eo,n("：在"),e("a",Ao,[Do,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",Ro,[e("a",Bo,[Co,t(o)])]),e("td",Io,[n("返回每个组的最低表达式值。"),Mo,n("：在"),e("a",No,[To,t(o)]),n("阶段可用。")])]),e("tr",null,[e("td",Oo,[e("a",Lo,[Vo,t(o)])]),e("td",Qo,[n("返回数值的总和。忽略非数字值。"),Yo,n("：在"),e("a",Go,[Ho,t(o)]),n("阶段可用。")])])])]),Jo,e("ul",null,[e("li",null,[Po,e("p",null,[n("该"),e("a",Uo,[zo,t(o)]),n("阶段对文档进行过滤，仅将 2014 年的文档传递到下一阶段。")])]),e("li",null,[Ko,e("p",null,[n("该"),e("a",Xo,[Zo,t(o)]),n("阶段按日期对单据进行分组，并计算每组单据的总销售额、平均数量和总数。")])]),e("li",null,[et,e("p",null,[n("该"),e("a",nt,[ot,t(o)]),n("阶段按每个组的总销售额以降序对结果进行排序。")])])]),tt,e("blockquote",null,[e("p",null,[n("参考"),e("a",st,[n("官方文档"),t(o)])])]),at,e("table",null,[rt,e("tbody",null,[e("tr",null,[e("td",lt,[e("a",it,[n("from"),t(o)])]),e("td",dt,[n("Specifies the collection in the "),pt,n(" database to perform the join with. The "),ct,n(" collection cannot be sharded. For details, see "),e("a",ut,[n("Sharded Collection Restrictions"),t(o)]),n(".")])]),e("tr",null,[e("td",gt,[e("a",_t,[n("localField"),t(o)])]),e("td",mt,[n("Specifies the field from the documents input to the "),e("a",ht,[bt,t(o)]),n(" stage. "),e("a",ft,[kt,t(o)]),n(" performs an equality match on the "),vt,n(" to the "),qt,n(" from the documents of the "),yt,n(" collection. If an input document does not contain the "),xt,n(", the "),e("a",$t,[Ft,t(o)]),n(" treats the field as having a value of "),wt,n(" for matching purposes.")])]),e("tr",null,[e("td",St,[e("a",Wt,[n("foreignField"),t(o)])]),e("td",jt,[n("Specifies the field from the documents in the "),Et,n(" collection. "),e("a",At,[Dt,t(o)]),n(" performs an equality match on the "),Rt,n(" to the "),Bt,n(" from the input documents. If a document in the "),Ct,n(" collection does not contain the "),It,n(", the "),e("a",Mt,[Nt,t(o)]),n(" treats the value as "),Tt,n(" for matching purposes.")])]),e("tr",null,[e("td",Ot,[e("a",Lt,[n("as"),t(o)])]),Vt])])]),Qt])}const Ut=a(d,[["render",Yt],["__file","MongoDB-进阶(聚合).html.vue"]]);export{Ut as default};
