import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as t,b as e}from"./app-CN-Tp3xY.js";const _={},n=e("p",null,"在介绍哨兵之前，首先从宏观角度回顾一下Redis实现高可用相关的技术。它们包括：持久化、复制、哨兵和集群，其主要作用和解决的问题是：",-1),o=e("ul",null,[e("li",null,"持久化：持久化是最简单的高可用方法(有时甚至不被归为高可用的手段)，主要作用是数据备份，即将数据存储在硬盘，保证数据不会因进程退出而丢失。"),e("li",null,"复制：复制是高可用Redis的基础，哨兵和集群都是在复制基础上实现高可用的。复制主要实现了数据的多机备份，以及对于读操作的负载均衡和简单的故障恢复。缺陷：故障恢复无法自动化；写操作无法负载均衡；存储能力受到单机的限制。"),e("li",null,"哨兵：在复制的基础上，哨兵实现了自动化的故障恢复。缺陷：写操作无法负载均衡；存储能力受到单机的限制。"),e("li",null,"集群：通过集群，Redis解决了写操作无法负载均衡，以及存储能力受到单机限制的问题，实现了较为完善的高可用方案。")],-1),i=[n,o];function c(r,d){return s(),t("div",null,i)}const f=l(_,[["render",c],["__file","Redis高可用.html.vue"]]);export{f as default};
