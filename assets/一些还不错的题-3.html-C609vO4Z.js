const n=JSON.parse(`{"key":"v-310015d6","path":"/posts/%E5%88%B7%E9%A2%98/%E4%B8%80%E4%BA%9B%E8%BF%98%E4%B8%8D%E9%94%99%E7%9A%84%E9%A2%98-3.html","title":"一些还不错的题-3","lang":"zh-CN","frontmatter":{"title":"一些还不错的题-3","date":"2022-03-20T00:00:03.000Z","categories":["刷题"],"description":"DP 最大正方形 给定一个由'0'和'1'组成的2维矩阵，返回该矩阵中最大的由'1'组成的正方形的面积，输入的矩阵是字符形式而非数字形式。 数据范围：矩阵的长宽满足 0 \\\\le n \\\\le 200≤n≤20,矩阵中的元素属于 {'1','0'} 进阶：空间复杂度 O(n^2)O(n2) ， 时间复杂度 O(n^2)O(n2) import java.util.*; public class Solution { /** * 最大正方形 * @param matrix char字符型二维数组 * @return int整型 */ public int solve (char[][] matrix) { // write code here int m = matrix.length; if(m == 0) return 0; int n = matrix[0].length; if(n == 0) return 0; int maxLen = 1; int[][] f = new int[m][n]; for(int i = 0; i &lt; m; i++) { for(int j = 0; j &lt; n; j++) { if(matrix[i][j] == '1') { int l1 = i &gt; 0 ? f[i - 1][j] : 0; int l2 = j &gt; 0 ? f[i][j - 1] : 0; int l3 = i &gt; 0 &amp;&amp; j &gt; 0 ? f[i - 1][j - 1] : 0; int l = Math.min(l1, Math.min(l2 ,l3)); f[i][j] = Math.max(1, l + 1); maxLen = Math.max(maxLen, f[i][j]); } } } return maxLen * maxLen; } } // i, j l1 l2","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%88%B7%E9%A2%98/%E4%B8%80%E4%BA%9B%E8%BF%98%E4%B8%8D%E9%94%99%E7%9A%84%E9%A2%98-3.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"一些还不错的题-3"}],["meta",{"property":"og:description","content":"DP 最大正方形 给定一个由'0'和'1'组成的2维矩阵，返回该矩阵中最大的由'1'组成的正方形的面积，输入的矩阵是字符形式而非数字形式。 数据范围：矩阵的长宽满足 0 \\\\le n \\\\le 200≤n≤20,矩阵中的元素属于 {'1','0'} 进阶：空间复杂度 O(n^2)O(n2) ， 时间复杂度 O(n^2)O(n2) import java.util.*; public class Solution { /** * 最大正方形 * @param matrix char字符型二维数组 * @return int整型 */ public int solve (char[][] matrix) { // write code here int m = matrix.length; if(m == 0) return 0; int n = matrix[0].length; if(n == 0) return 0; int maxLen = 1; int[][] f = new int[m][n]; for(int i = 0; i &lt; m; i++) { for(int j = 0; j &lt; n; j++) { if(matrix[i][j] == '1') { int l1 = i &gt; 0 ? f[i - 1][j] : 0; int l2 = j &gt; 0 ? f[i][j - 1] : 0; int l3 = i &gt; 0 &amp;&amp; j &gt; 0 ? f[i - 1][j - 1] : 0; int l = Math.min(l1, Math.min(l2 ,l3)); f[i][j] = Math.max(1, l + 1); maxLen = Math.max(maxLen, f[i][j]); } } } return maxLen * maxLen; } } // i, j l1 l2"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:published_time","content":"2022-03-20T00:00:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一些还不错的题-3\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-20T00:00:03.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"DP","slug":"dp","link":"#dp","children":[{"level":3,"title":"最大正方形","slug":"最大正方形","link":"#最大正方形","children":[]},{"level":3,"title":"三角形最小路径和","slug":"三角形最小路径和","link":"#三角形最小路径和","children":[]},{"level":3,"title":"合法的括号字符串","slug":"合法的括号字符串","link":"#合法的括号字符串","children":[]},{"level":3,"title":"NC176 打家劫舍(一)","slug":"nc176-打家劫舍-一","link":"#nc176-打家劫舍-一","children":[]},{"level":3,"title":"NC177 打家劫舍(二)","slug":"nc177-打家劫舍-二","link":"#nc177-打家劫舍-二","children":[]},{"level":3,"title":"NC243 目标和","slug":"nc243-目标和","link":"#nc243-目标和","children":[]},{"level":3,"title":"最长公共子数组","slug":"最长公共子数组","link":"#最长公共子数组","children":[]},{"level":3,"title":"NC181 单词拆分(一)","slug":"nc181-单词拆分-一","link":"#nc181-单词拆分-一","children":[]},{"level":3,"title":"NC83 连续子数组的最大乘积","slug":"nc83-连续子数组的最大乘积","link":"#nc83-连续子数组的最大乘积","children":[]},{"level":3,"title":"NC134 买卖股票的最好时机(二)","slug":"nc134-买卖股票的最好时机-二","link":"#nc134-买卖股票的最好时机-二","children":[]},{"level":3,"title":"NC138 矩阵最长递增路径","slug":"nc138-矩阵最长递增路径","link":"#nc138-矩阵最长递增路径","children":[]}]},{"level":2,"title":"堆（优先队列）","slug":"堆-优先队列","link":"#堆-优先队列","children":[{"level":3,"title":"数据流中的中位数","slug":"数据流中的中位数","link":"#数据流中的中位数","children":[]}]},{"level":2,"title":"递归/DFS","slug":"递归-dfs","link":"#递归-dfs","children":[{"level":3,"title":"N皇后问题","slug":"n皇后问题","link":"#n皇后问题","children":[]},{"level":3,"title":"NC242 单词搜索","slug":"nc242-单词搜索","link":"#nc242-单词搜索","children":[]}]},{"level":2,"title":"双指针/滑窗","slug":"双指针-滑窗","link":"#双指针-滑窗","children":[{"level":3,"title":"NC168 盛水最多的容器","slug":"nc168-盛水最多的容器","link":"#nc168-盛水最多的容器","children":[]},{"level":3,"title":"NC170 最长不含重复字符的子字符串","slug":"nc170-最长不含重复字符的子字符串","link":"#nc170-最长不含重复字符的子字符串","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"NC85 拼接所有的字符串产生字典序最小的字符串","slug":"nc85-拼接所有的字符串产生字典序最小的字符串","link":"#nc85-拼接所有的字符串产生字典序最小的字符串","children":[]},{"level":3,"title":"NC180 给数组加一","slug":"nc180-给数组加一","link":"#nc180-给数组加一","children":[]},{"level":3,"title":"链表","slug":"链表","link":"#链表","children":[]},{"level":3,"title":"NC110 旋转数组","slug":"nc110-旋转数组","link":"#nc110-旋转数组","children":[]},{"level":3,"title":"NC79 丑数","slug":"nc79-丑数","link":"#nc79-丑数","children":[]},{"level":3,"title":"NC142 最长重复子串","slug":"nc142-最长重复子串","link":"#nc142-最长重复子串","children":[]}]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":14.66,"words":4399},"filePathRelative":"posts/刷题/一些还不错的题-3.md","localizedDate":"2022年3月20日","excerpt":"<h2> DP</h2>\\n<h3> 最大正方形</h3>\\n<p>给定一个由'0'和'1'组成的2维矩阵，返回该矩阵中最大的由'1'组成的正方形的面积，输入的矩阵是字符形式而非数字形式。\\n数据范围：矩阵的长宽满足 0 \\\\le n \\\\le 200≤<em>n</em>≤20,矩阵中的元素属于 {'1','0'}\\n进阶：空间复杂度 O(n^2)<em>O</em>(<em>n</em>2) ， 时间复杂度 O(n^2)<em>O</em>(<em>n</em>2)</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 最大正方形\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">matrix</span> char字符型二维数组 \\n     * <span class=\\"token keyword\\">@return</span> int整型\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> solve <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">char</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> matrix<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// write code here</span>\\n        <span class=\\"token keyword\\">int</span> m <span class=\\"token operator\\">=</span> matrix<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>m <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> n <span class=\\"token operator\\">=</span> matrix<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> maxLen <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> f <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">[</span>m<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>n<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> m<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> n<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>matrix<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token char\\">'1'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token keyword\\">int</span> l1 <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> f<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token keyword\\">int</span> l2 <span class=\\"token operator\\">=</span> j <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> f<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token keyword\\">int</span> l3 <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> j <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> f<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token keyword\\">int</span> l <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span>l1<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">min</span><span class=\\"token punctuation\\">(</span>l2 <span class=\\"token punctuation\\">,</span>l3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    f<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> l <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    maxLen <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Math</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>maxLen<span class=\\"token punctuation\\">,</span> f<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> maxLen <span class=\\"token operator\\">*</span> maxLen<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// i, j l1 l2     </span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
