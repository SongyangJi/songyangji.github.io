const e=JSON.parse('{"key":"v-2c10ffd6","path":"/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D.html","title":"SpringBoot自动装配","lang":"zh-CN","frontmatter":{"title":"SpringBoot自动装配","date":"2022-09-05T11:32:10.000Z","categories":["Spring"],"tags":null,"description":"从SPI到SpringBootAutoConfig SPI ，全称为 Service Provider Interface(服务提供者接口)，是一种服务发现机制。它通过在classpath路径下的META-INF/services文件夹查找文件，自动加载文件中所定义的类。 通过某种方式读取spring.factories文件，紧接着把里面所有的自动配置类加载到Spring容器中，然后就可以通过Spring的机制将配置类的@Bean注入到容器中了。 看完就会的SpringBoot自动装配原理","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"SpringBoot自动装配"}],["meta",{"property":"og:description","content":"从SPI到SpringBootAutoConfig SPI ，全称为 Service Provider Interface(服务提供者接口)，是一种服务发现机制。它通过在classpath路径下的META-INF/services文件夹查找文件，自动加载文件中所定义的类。 通过某种方式读取spring.factories文件，紧接着把里面所有的自动配置类加载到Spring容器中，然后就可以通过Spring的机制将配置类的@Bean注入到容器中了。 看完就会的SpringBoot自动装配原理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:published_time","content":"2022-09-05T11:32:10.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot自动装配\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-05T11:32:10.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":1.75,"words":524},"filePathRelative":"posts/Spring学习笔记/SpringBoot自动装配.md","localizedDate":"2022年9月5日","excerpt":"<h1> 从SPI到SpringBootAutoConfig</h1>\\n<p>SPI ，全称为 Service Provider Interface(服务提供者接口)，是一种服务发现机制。它通过在classpath路径下的META-INF/services文件夹查找文件，自动加载文件中所定义的类。</p>\\n<p>通过某种方式读取<code>spring.factories</code>文件，紧接着把里面所有的自动配置类加载到Spring容器中，然后就可以通过Spring的机制将配置类的@Bean注入到容器中了。</p>\\n<p><a href=\\"https://segmentfault.com/a/1190000040510401\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">看完就会的SpringBoot自动装配原理</a></p>","autoDesc":true}');export{e as data};
