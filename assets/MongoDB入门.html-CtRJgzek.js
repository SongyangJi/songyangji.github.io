const e=JSON.parse('{"key":"v-55a829d3","path":"/posts/MongoDB/MongoDB%E5%85%A5%E9%97%A8.html","title":"M1 MacOS 下使用Brew安装MongoDB、入门概念","lang":"zh-CN","frontmatter":{"title":"M1 MacOS 下使用Brew安装MongoDB、入门概念","date":"2021-10-04T16:28:57.000Z","categories":["MongoDB"],"tags":["NoSQL","MongoDB"],"description":"特性 1. 灵活的模型 区别于关系数据库最大的一个特点就是字段灵活变更，这就非常适合一些迭代频繁且数据模型多变的业务场景。例如我们直播的活动业务场景，当前直播活动越来越多，玩的花样也是越来越多，其实就很适合用mongoDB来做活动业务的数据存储。 2. json数据格式 mongoDB的数据存储都是json格式，非常适合微服务Restful Api。 3. 横向扩展能力 与mysql的分库分表不同，它可以在业务代码不变更的情况下做自动水平扩展。能够很好的解决上文描述的两个场景 ① 分表数据不均匀 ② 分表数据过大要调整原有数据分布。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/MongoDB/MongoDB%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"M1 MacOS 下使用Brew安装MongoDB、入门概念"}],["meta",{"property":"og:description","content":"特性 1. 灵活的模型 区别于关系数据库最大的一个特点就是字段灵活变更，这就非常适合一些迭代频繁且数据模型多变的业务场景。例如我们直播的活动业务场景，当前直播活动越来越多，玩的花样也是越来越多，其实就很适合用mongoDB来做活动业务的数据存储。 2. json数据格式 mongoDB的数据存储都是json格式，非常适合微服务Restful Api。 3. 横向扩展能力 与mysql的分库分表不同，它可以在业务代码不变更的情况下做自动水平扩展。能够很好的解决上文描述的两个场景 ① 分表数据不均匀 ② 分表数据过大要调整原有数据分布。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"NoSQL"}],["meta",{"property":"article:tag","content":"MongoDB"}],["meta",{"property":"article:published_time","content":"2021-10-04T16:28:57.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"M1 MacOS 下使用Brew安装MongoDB、入门概念\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-04T16:28:57.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"1. 灵活的模型","slug":"_1-灵活的模型","link":"#_1-灵活的模型","children":[]},{"level":3,"title":"2. json数据格式","slug":"_2-json数据格式","link":"#_2-json数据格式","children":[]},{"level":3,"title":"3. 横向扩展能力","slug":"_3-横向扩展能力","link":"#_3-横向扩展能力","children":[]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"集合","slug":"集合","link":"#集合","children":[]},{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"ObjectId","slug":"objectid","link":"#objectid","children":[]}]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":4.97,"words":1492},"filePathRelative":"posts/MongoDB/MongoDB入门.md","localizedDate":"2021年10月5日","excerpt":"<h1> 特性</h1>\\n<h3> 1. 灵活的模型</h3>\\n<p>区别于关系数据库最大的一个特点就是字段灵活变更，这就非常适合一些迭代频繁且数据模型多变的业务场景。例如我们直播的活动业务场景，当前直播活动越来越多，玩的花样也是越来越多，其实就很适合用mongoDB来做活动业务的数据存储。</p>\\n<h3> 2. json数据格式</h3>\\n<p>mongoDB的数据存储都是json格式，非常适合微服务Restful Api。</p>\\n<h3> 3. 横向扩展能力</h3>\\n<p>与mysql的分库分表不同，它可以在业务代码不变更的情况下做自动水平扩展。能够很好的解决上文描述的两个场景\\n① 分表数据不均匀\\n② 分表数据过大要调整原有数据分布。</p>","autoDesc":true}');export{e as data};
