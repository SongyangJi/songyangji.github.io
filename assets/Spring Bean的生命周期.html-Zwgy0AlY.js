const e=JSON.parse('{"key":"v-5fe84ae3","path":"/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Spring%20Bean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","title":"Spring Bean的生命周期","lang":"zh-CN","frontmatter":{"title":"Spring Bean的生命周期","date":"2022-03-22T15:27:26.000Z","categories":["Spring"],"description":"一张图解释 对于 Spring Bean 的生命周期来说： 实例化 Instantiation 属性赋值 Populate 初始化 Initialization 销毁 Destruction Spring Bean 的生命周期的扩展点 Spring Bean 的生命周期的扩展点超级多，老周这里不可能全部列出来，只说核心的扩展点。这也就是为什么 Spring 的扩展性很好的原因，开了很多的口子，尽可能让某个功能高内聚松耦合，用户需要哪个功能就用哪个，而不是直接来一个大而全的东西。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Spring%20Bean%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"Spring Bean的生命周期"}],["meta",{"property":"og:description","content":"一张图解释 对于 Spring Bean 的生命周期来说： 实例化 Instantiation 属性赋值 Populate 初始化 Initialization 销毁 Destruction Spring Bean 的生命周期的扩展点 Spring Bean 的生命周期的扩展点超级多，老周这里不可能全部列出来，只说核心的扩展点。这也就是为什么 Spring 的扩展性很好的原因，开了很多的口子，尽可能让某个功能高内聚松耦合，用户需要哪个功能就用哪个，而不是直接来一个大而全的东西。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T15:13:02.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:published_time","content":"2022-03-22T15:27:26.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T15:13:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Bean的生命周期\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-03-22T15:27:26.000Z\\",\\"dateModified\\":\\"2024-02-17T15:13:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一张图解释","slug":"一张图解释","link":"#一张图解释","children":[]},{"level":2,"title":"Spring Bean 的生命周期的扩展点","slug":"spring-bean-的生命周期的扩展点","link":"#spring-bean-的生命周期的扩展点","children":[]},{"level":2,"title":"Bean的后置处理器","slug":"bean的后置处理器","link":"#bean的后置处理器","children":[{"level":3,"title":"BeanFactoryPostProcessor、BeanPostProcessor","slug":"beanfactorypostprocessor、beanpostprocessor","link":"#beanfactorypostprocessor、beanpostprocessor","children":[]},{"level":3,"title":"BeanPostProcessor、InitializingBean","slug":"beanpostprocessor、initializingbean","link":"#beanpostprocessor、initializingbean","children":[]}]}],"git":{"createdTime":1708182782000,"updatedTime":1708182782000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":2.19,"words":657},"filePathRelative":"posts/Spring学习笔记/Spring Bean的生命周期.md","localizedDate":"2022年3月22日","excerpt":"<h2> 一张图解释</h2>\\n<figure><figcaption></figcaption></figure>\\n<p>对于 Spring Bean 的生命周期来说：</p>\\n<ul>\\n<li>实例化 Instantiation</li>\\n<li>属性赋值 Populate</li>\\n<li>初始化 Initialization</li>\\n<li>销毁 Destruction</li>\\n</ul>\\n<h2> Spring Bean 的生命周期的扩展点</h2>\\n<p>Spring Bean 的生命周期的扩展点超级多，老周这里不可能全部列出来，只说核心的扩展点。这也就是为什么 Spring\\n的扩展性很好的原因，开了很多的口子，尽可能让某个功能高内聚松耦合，用户需要哪个功能就用哪个，而不是直接来一个大而全的东西。</p>","autoDesc":true}');export{e as data};
