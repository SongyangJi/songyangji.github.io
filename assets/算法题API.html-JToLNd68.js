const n=JSON.parse('{"key":"v-27f5b661","path":"/posts/%E7%AE%97%E6%B3%95%E9%A2%98API.html","title":"算法题C++模板API","lang":"zh-CN","frontmatter":{"title":"算法题C++模板API","date":"2021-11-28T22:28:28.000Z","categories":"Cpp","tags":["算法题","cpp"],"description":"语法类 类与结构体 struct Node { int x, y, z; Node(int x, int y, int z) : x(x), y(y), z(z) {} }; int main() { // 初始化 Node node(1, 2, 3); Node node1 = {2, 3, 4}; return 0; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E7%AE%97%E6%B3%95%E9%A2%98API.html"}],["meta",{"property":"og:site_name","content":"常潇的技术站"}],["meta",{"property":"og:title","content":"算法题C++模板API"}],["meta",{"property":"og:description","content":"语法类 类与结构体 struct Node { int x, y, z; Node(int x, int y, int z) : x(x), y(y), z(z) {} }; int main() { // 初始化 Node node(1, 2, 3); Node node1 = {2, 3, 4}; return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-18T12:43:38.000Z"}],["meta",{"property":"article:author","content":"常潇-KeepCool"}],["meta",{"property":"article:tag","content":"算法题"}],["meta",{"property":"article:tag","content":"cpp"}],["meta",{"property":"article:published_time","content":"2021-11-28T22:28:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-18T12:43:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法题C++模板API\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-28T22:28:28.000Z\\",\\"dateModified\\":\\"2024-01-18T12:43:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"常潇-KeepCool\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"类与结构体","slug":"类与结构体","link":"#类与结构体","children":[]},{"level":2,"title":"重新定义类型","slug":"重新定义类型","link":"#重新定义类型","children":[]},{"level":2,"title":"IO","slug":"io","link":"#io","children":[]},{"level":2,"title":"reverse","slug":"reverse","link":"#reverse","children":[]},{"level":2,"title":"sort","slug":"sort","link":"#sort","children":[]},{"level":2,"title":"lower_bound、upper_bound","slug":"lower-bound、upper-bound","link":"#lower-bound、upper-bound","children":[]},{"level":2,"title":"pair","slug":"pair","link":"#pair","children":[]},{"level":2,"title":"string","slug":"string","link":"#string","children":[]},{"level":2,"title":"vector","slug":"vector","link":"#vector","children":[]},{"level":2,"title":"queue、stack","slug":"queue、stack","link":"#queue、stack","children":[]},{"level":2,"title":"deque","slug":"deque","link":"#deque","children":[]},{"level":2,"title":"priority_queue","slug":"priority-queue","link":"#priority-queue","children":[]},{"level":2,"title":"set、unordered_set","slug":"set、unordered-set","link":"#set、unordered-set","children":[]},{"level":2,"title":"map、unordered_map","slug":"map、unordered-map","link":"#map、unordered-map","children":[]},{"level":2,"title":"multiset、multimap","slug":"multiset、multimap","link":"#multiset、multimap","children":[]},{"level":2,"title":"容器的相互转换","slug":"容器的相互转换","link":"#容器的相互转换","children":[]}],"git":{"createdTime":1705581818000,"updatedTime":1705581818000,"contributors":[{"name":"jisongyang","email":"jisongyang@kuaishou.com","commits":1}]},"readingTime":{"minutes":5.1,"words":1531},"filePathRelative":"posts/算法题API.md","localizedDate":"2021年11月29日","excerpt":"<h1> 语法类</h1>\\n<h2> 类与结构体</h2>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Node</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token function\\">Node</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> y<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> z<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">x</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">y</span><span class=\\"token punctuation\\">(</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">z</span><span class=\\"token punctuation\\">(</span>z<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n    \\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 初始化</span>\\n    Node <span class=\\"token function\\">node</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    Node node1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
